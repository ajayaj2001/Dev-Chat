{"version":3,"sources":["action/types.js","action/index.js","firebase.js","component/sidepanel/userPanel/UserPanel.js","component/sidepanel/channels/channelItem/ChannelItemList.js","component/sidepanel/channels/Channels.js","component/sidepanel/directMessage/DirectMessages.js","component/sidepanel/starred/Starred.js","component/colorPanel/ColorPanel.js","component/sidepanel/sidePanel/SidePanel.js","component/message/FileModal.js","component/message/ProgressBar.js","component/message/messageForm/MessageForm.js","component/message/messageHeader/MessagesHeader.js","component/message/messageChat/MessageChat.js","component/spinner/Spinner.js","component/message/Typing.js","component/message/DisplayTypingUsers.js","component/message/InitialMessage/InitialMessage.js","component/message/message/Message.js","component/metaPanel/MetaPanel.js","component/app/App.js","img/livechat.gif","component/Auth/login/loginForm/LoginForm.js","component/Auth/login/Login.js","img/rocket.jpg","component/Auth/register/registerForm/RegisterForm.js","component/Auth/register/Register.js","reducers/index.js","index.js"],"names":["SET_USER","CLEAR_USER","SET_CURRENT_CHANNEL","SET_PRIVATE_CHANNEL","SET_USER_POSTS","SET_COLORS","setCurrentChannel","channel","type","actionTypes","payload","currentChannel","setPrivateChannel","isPrivateChannel","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","analytics","UserPanel","props","useState","modal","setModal","previewImage","setPreviewImage","croppedImage","setCroppedImage","blob","setblob","avatarEditorRef","useRef","storage","ref","storageRef","auth","currentUser","userRef","database","usersRef","contentType","metaData","changeAvatar","downloadURL","updateProfile","photoURL","then","catch","err","console","log","child","uid","update","avatar","signOut","Fragment","className","style","color","Header","as","inverted","padding","Dropdown","trigger","Image","src","currUser","spaced","marginRight","displayName","options","key","text","disabled","onClick","Modal","basic","open","onClose","Content","Input","fluid","label","name","onChange","event","file","target","files","reader","FileReader","readAsDataURL","addEventListener","result","Grid","centered","stackable","columns","Row","Column","image","width","height","border","scale","margin","Actions","Button","put","snap","getDownloadURL","Icon","current","getImageScaledToCanvas","toBlob","imageURL","URL","createObjectURL","ChannelItemList","changeChannel","currChannel","messagesRef","notification","setNotification","useEffect","id","on","handleNotification","off","clearNotification","channelId","lastTotal","total","numChildren","count","lastKnownTotal","Menu","Item","opacity","position","active","Label","Channels","user","currChannelState","channels","setChannels","setCurrChannel","channelName","setChannelName","channelDetails","setChannelDetails","channelRef","firstLoad","setFirstLoad","typingRef","dispatch","useDispatch","prevChannel","push","val","forEach","firstChannel","length","remove","formSubmit","preventDefault","newChannel","details","createdBy","addChannel","backgroundColor","paddingBottom","paddingLeft","map","fontSize","Form","onSubmit","Field","value","placeholder","DirectMessages","activeChannel","setActiveChannel","users","setUsers","connectedRef","presenceRef","addListeners","currUserId","some","existingUser","set","onDisconnect","error","addStatusToUser","getChannelId","userId","currentUserId","connected","prevUsers","isUserOnline","status","channelData","fontStyle","Starred","starredChannels","setStarredChannels","starredChannel","channelToRemove","filterChannels","filter","ColorPanel","primary","setPrimary","secondary","setSecondary","userColors","setUserColors","unshift","colors","Divider","icon","size","i","primaryColor","secondaryColor","background","display","alignItems","justifyContent","content","hex","SidePanel","activeItem","FileModal","uploadFile","setFile","authorized","addFile","includes","mime","lookup","metadata","sentFile","ProgressBar","uploadState","percentUploaded","Progress","percent","progress","indicating","MessageForm","getMessageRef","message","setMessage","loading","setLoading","errors","setErrors","setUploadState","setPercentUploaded","emojiPicker","setEmojiPicker","messageInputRef","createMessage","fileUrl","messageObj","timestamp","ServerValue","TIMESTAMP","sentMessage","colonToUnicode","replace","x","emoji","emojiIndex","emojis","unicode","native","sentFileMessage","downloadUrl","pathToUpload","errs","onSelect","newMessage","colons","setTimeout","focus","title","emojiTooltip","theme","top","left","borderRadius","onKeyDown","ctrlKey","keyCode","rows","resize","filePath","uuidv4","uploadtemp","percentageUpload","Math","round","bytesTransferred","totalBytes","snapshot","MessagesHeader","numUniqueUsers","handleSearchTerm","searchLoading","isChannelStarred","handleStar","floated","Subheader","paddingTop","MessageChat","time","isOwnMessage","hasOwnProperty","isImage","moment","fromNow","Spinner","Dimmer","Loader","Typing","DisplayTypingUsers","typingUsers","setTypingUsers","listeners","setListeners","addUserTypingListener","removeListeners","listener","addToListeners","findIndex","newListener","tempTypingUsers","concat","marginBottom","InitialMessage","Message","messageEnd","setNumUniqueUsers","messageRef","privateMessageRef","messages","setMessages","messageLoading","setMessageLoading","searchTearm","setSearchTearm","searchResult","setSearchResult","setSearchLoading","setIsChannelStarred","connectRef","messageListener","addUserStarsListener","scrollIntoView","behavior","block","once","data","prevStarred","Object","keys","loadedMessages","countUniqueUsers","countUserPosts","uniqueUsers","reduce","acc","plural","userPosts","setUserPosts","displayMessage","search","toLowerCase","updatedChannelStarred","Comment","Group","MetaPanel","privateChannel","activeIndex","setActiveIndex","formateCount","num","Segment","attached","Accordion","styled","Title","index","List","entries","sort","a","b","Description","slice","displayTopPosters","circular","App","setCurrUser","setPrimaryColor","setSecondaryColor","setActiveItem","useSelector","state","currUserPosts","handleItemClick","e","vertical","Popup","pinned","LoginForm","seterrors","email","setEmail","password","setPassword","signInWithEmailAndPassword","iconPosition","to","Login","sideGif","alt","RegisterForm","username","setUsername","confirmPassword","setConfirmPassword","createUserWithEmailAndPassword","createdUser","md5","Checkbox","required","Register","sideImage","initialUserState","isLoading","initialChannelState","initialColors","rootReducer","combineReducers","action","store","createStore","Root","history","useHistory","onAuthStateChanged","setUser","exact","path","component","RouterRoot","basename","children","ReactDOM","render","document","getElementById"],"mappings":"4kBACaA,EAAW,WACXC,EAAa,aAKbC,EAAsB,sBAEtBC,EAAsB,sBAEtBC,EAAiB,iBAIjBC,EAAa,aCObC,EAAoB,SAAAC,GAC7B,MAAO,CACHC,KAAMC,EACNC,QAAS,CACLC,eAAgBJ,KAMfK,EAAoB,SAAAC,GAC7B,MAAO,CACHL,KAAMC,EACNC,QAAS,CACLG,sB,uLCnBZC,IAASC,cAVY,CACjBC,OAAQ,0CACRC,WAAY,4BACZC,UAAW,YACXC,cAAe,wBACfC,kBAAmB,eACnBC,MAAO,4CACPC,cAAe,iBAInBR,IAASS,YAEMT,QAAf,ECuKeU,EApLG,SAACC,GAAW,IAAD,EAECC,oBAAS,GAFV,mBAElBC,EAFkB,KAEXC,EAFW,OAGeF,mBAAS,IAHxB,mBAGlBG,EAHkB,KAGJC,EAHI,OAIeJ,mBAAS,IAJxB,mBAIlBK,EAJkB,KAIJC,EAJI,OAKDN,mBAAS,IALR,mBAKlBO,EALkB,KAKZC,EALY,KAMnBC,EAAkBC,iBAAO,MANN,EAOJV,mBAASZ,EAASuB,UAAUC,OAA1CC,EAPkB,sBAQPb,mBAASZ,EAAS0B,OAAOC,aAApCC,EARkB,sBASNhB,mBAASZ,EAAS6B,WAAWL,IAAI,UAA7CM,EATkB,sBAUNlB,mBAAS,CAAEmB,YAAa,eAApCC,EAVkB,oBA2CnBC,EAAe,SAACC,GAClBN,EACKO,cAAc,CACXC,SAAUF,IAEbG,MAAK,WACFvB,GAAS,MAEZwB,OAAM,SAAAC,GACHC,QAAQC,IAAIF,MAGpBT,EACKY,MAAMd,EAAQe,KACdC,OAAO,CACJC,OAAQX,IAEXG,MAAK,eAELC,OAAM,SAAAC,GACHC,QAAQC,IAAIF,OAoBlBO,EAAU,WACZ9C,EACK0B,OACAoB,UACAT,QAET,OAEI,eAAC,IAAMU,SAAP,WACI,qBAAKC,UAAU,YAAYC,MAAO,CAAEC,MAAO,SAA3C,SACI,cAACC,EAAA,EAAD,CAAQC,GAAG,KAAKC,UAAQ,EAACL,UAAU,sBAAsBC,MAAO,CAAEC,MAAO,QAASI,QAAS,WAA3F,SACI,qBAAKN,UAAU,mBAAf,SACI,cAACO,EAAA,EAAD,CAAUC,QACN,iCACI,cAACC,EAAA,EAAD,CAAOC,IAAK/C,EAAMgD,SAASvB,SAAUwB,OAAO,QAAQf,QAAM,EAACI,MAAO,CAAEY,YAAa,UAChFlD,EAAMgD,SAASG,eAEtBC,QAjCQ,CAC1B,CACIC,IAAK,SACLC,KAAM,iDAAmB,iCAAStD,EAAMgD,SAASG,iBACjDI,UAAU,GAEd,CACIF,IAAK,SACLC,KAAM,sBAAME,QAAS,kBAAMrD,GAAS,IAA9B,4BAEV,CACIkD,IAAK,UACLC,KAAM,sBAAME,QAASrB,EAAf,wBAwBUE,UAAU,qBAO1B,eAACoB,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAMzD,EAAO0D,QAAS,kBAAMzD,GAAS,IAAlD,UACI,cAACsD,EAAA,EAAMjB,OAAP,4BACA,eAACiB,EAAA,EAAMI,QAAP,WACI,cAACC,EAAA,EAAD,CACIC,OAAK,EACLhF,KAAK,OACLiF,MAAM,aACNC,KAAK,eACLC,SA3GK,SAACC,GACtB,IAAMC,EAAOD,EAAME,OAAOC,MAAM,GAC1BC,EAAS,IAAIC,WACfJ,IACAG,EAAOE,cAAcL,GACrBG,EAAOG,iBAAiB,QAAQ,WAC5BrE,EAAgBkE,EAAOI,eAwGnB,cAACC,EAAA,EAAD,CAAMC,UAAQ,EAACC,WAAS,EAACC,QAAS,EAAlC,SACI,eAACH,EAAA,EAAKI,IAAN,CAAUH,UAAQ,EAAlB,UACI,cAACD,EAAA,EAAKK,OAAN,CAAa5C,UAAU,yBAAvB,SACKjC,GACG,cAAC,IAAD,CACI8E,MAAO9E,EACP+E,MAAO,IACPC,OAAQ,IACRC,OAAQ,GACRC,MAAO,IACPzE,IAAKH,MAIjB,cAACkE,EAAA,EAAKK,OAAN,UACK3E,GACG,cAACwC,EAAA,EAAD,CACIR,MAAO,CAAEiD,OAAQ,cACjBJ,MAAO,IACPC,OAAQ,IACRrC,IAAKzC,cAO7B,eAACmD,EAAA,EAAM+B,QAAP,WACKlF,GACG,eAACmF,EAAA,EAAD,CACIlD,MAAM,QACNG,UAAQ,EACRc,QAzHG,WACvB1C,EACKiB,MADL,uBAC2Bd,EAAQe,MAC9B0D,IAAIlF,EAAMa,GACVK,MAAK,SAAAiE,GACFA,EAAK9E,IAAI+E,iBAAiBlE,MAAK,SAAAH,GAC3BD,EAAaC,UAgHT,UAMI,cAACsE,EAAA,EAAD,CAAM5B,KAAK,SANf,mBASJ,eAACwB,EAAA,EAAD,CACIlD,MAAM,QACNG,UAAQ,EACRc,QA5II,WAChB9C,EAAgBoF,SAChBpF,EAAgBoF,QAAQC,yBAAyBC,QAAO,SAAAxF,GACpD,IAAIyF,EAAWC,IAAIC,gBAAgB3F,GACnCD,EAAgB0F,GAChBxF,EAAQD,OAoIJ,UAKI,cAACqF,EAAA,EAAD,CAAM5B,KAAK,UALf,aAQA,eAACwB,EAAA,EAAD,CACIlD,MAAM,MAAMG,UAAQ,EAACc,QAAS,kBAAMrD,GAAS,IADjD,UAEI,cAAC0F,EAAA,EAAD,CAAM5B,KAAK,WAFf,sB,0BC1GLmC,G,OA5DS,SAAC,GAA6C,IAA3CtH,EAA0C,EAA1CA,QAASuH,EAAiC,EAAjCA,cAAeC,EAAkB,EAAlBA,YAAkB,EAC3CrG,mBAASZ,EAAS6B,WAAWL,IAAI,aAAhD0F,EAD0D,sBAEzBtG,mBAAS,MAFgB,mBAE1DuG,EAF0D,KAE5CC,EAF4C,KAIjEC,qBAAU,WACF5H,GAAWwH,GACXC,EAAYxE,MAAMjD,EAAQ6H,IAAIC,GAAG,SAAS,SAAAjB,GACtCkB,EAAmB/H,EAAQ6H,GAAIhB,QAIxC,CAAC7G,EAASwH,IAEbI,qBAAU,WACN,OAAO,WACHH,EAAYxE,MAAMjD,EAAQ6H,IAAIG,MAC9BC,OAGL,IAEH,IAAMF,EAAqB,SAACG,EAAWrB,GACnC,GAAIa,EAAc,CACd,IAAMS,EAAYT,EAAaU,OAAS,EAEpCvB,EAAKwB,cAAgBF,EAAY,IACjCT,EAAaY,MAAQzB,EAAKwB,cAAgBF,GAE9CT,EAAaa,eAAiB1B,EAAKwB,cACnCV,EAAgB,eAAKD,SAErBC,EAAgB,CACZE,GAAIK,EACJE,MAAOvB,EAAKwB,cACZE,eAAgB1B,EAAKwB,cACrBC,MAAO,KAKbL,EAAoB,kBAAMN,EAAgB,OAEhD,OAEI,eAACa,EAAA,EAAKC,KAAN,CAEI/D,QAAS,WAAQ6C,EAAcvH,GAAUiI,KACzC9C,KAAMnF,EAAQmF,KACd3B,MAAO,CAAEkF,QAAS,GAAKC,SAAU,YACjCC,QAAe,OAAP5I,QAAO,IAAPA,OAAA,EAAAA,EAAS6H,OAAT,OAAgBL,QAAhB,IAAgBA,OAAhB,EAAgBA,EAAaK,IALzC,UAQI,sBAAKtE,UAAU,wCAAf,cAAyDvD,EAAQmF,QAChEuC,KAAkBA,EAAaY,OAC5B,cAACO,EAAA,EAAD,CAAOpF,MAAM,MAAMF,UAAU,wBAA7B,SAAsDmE,EAAaY,UATlEtI,EAAQ6H,MCgHViB,EA5JE,SAAC,GAAgC,IAA9BC,EAA6B,EAA7BA,KAAMC,EAAuB,EAAvBA,iBAAuB,EACb7H,mBAAS,IADI,mBACtC8H,EADsC,KAC5BC,EAD4B,OAEP/H,mBAAS,MAFF,mBAEtCqG,EAFsC,KAEzB2B,EAFyB,OAGnBhI,oBAAS,GAHU,mBAGtCC,EAHsC,KAG/BC,EAH+B,OAIPF,mBAAS,IAJF,mBAItCiI,EAJsC,KAIzBC,EAJyB,OAKDlI,mBAAS,IALR,mBAKtCmI,EALsC,KAKtBC,EALsB,OAMxBpI,mBAASZ,EAAS6B,WAAWL,IAAI,aAA/CyH,EANsC,sBAOvBrI,mBAASZ,EAAS6B,WAAWL,IAAI,aAAhD0F,EAPsC,sBAQXtG,oBAAS,GARE,mBAQtCsI,EARsC,KAQ3BC,EAR2B,OASzBvI,mBAASZ,EAAS6B,WAAWL,IAAI,WAA9C4H,EATsC,oBAUvCC,EAAWC,cACbC,EAActC,EAElBI,qBAAU,WACN,IAAIqB,EAAW,GAEfO,EAAW1B,GAAG,eAAe,SAAAjB,GACzBoC,EAASc,KAAKlD,EAAKmD,OACnBd,EAAYD,QAEjB,CAACO,IAEJ5B,qBAAU,WACN,OAAO,WACH4B,EAAWxB,MACXiB,EAASgB,SAAQ,SAAAjK,GACbyH,EAAYxE,MAAMjD,EAAQ6H,IAAIG,YAIvC,IAGHJ,qBAAU,WACN,IAAMsC,EAAejB,EAAS,GAC1BQ,GAAaR,EAASkB,OAAS,IAC/BP,EAAS7J,EAAkBmK,IAC3BR,GAAa,GACbP,EAAee,MAGpB,CAACjB,EAAUQ,IAKd,IAWMlC,EAAgB,SAACvH,GACnB4J,EAAS7J,EAAkBC,IAC3B4J,EAASvJ,GAAkB,IAC3B8I,EAAenJ,GACf2J,EACK1G,MAAM6G,EAAYjC,IAClB5E,MAAM8F,EAAK7F,KACXkH,UA8BHC,EAAa,SAAChF,GAChBA,EAAMiF,iBACFlB,EAAYe,OAAS,GAAKf,EAAYe,OAAS,IAAMb,GA5B1C,WACf,IAAM/E,EAAMiF,EAAWO,OAAOxF,IACxBgG,EAAa,CACf1C,GAAItD,EACJY,KAAMiE,EACNoB,QAASlB,EACTmB,UAAW,CACPtF,KAAM4D,EAAK1E,YACXjB,OAAQ2F,EAAKpG,WAGrB6G,EACKvG,MAAMsB,GACNpB,OAAOoH,GACP3H,MAAK,WACFyG,EAAe,IACfE,EAAkB,IAClBlI,GAAS,MAEZwB,OAAM,SAAAC,GACHC,QAAQC,IAAIF,MAShB4H,IAGR,OACI,eAAC,IAAMpH,SAAP,WACI,eAACkF,EAAA,EAAKA,KAAN,CAAWjF,UAAU,UAArB,UACI,eAACiF,EAAA,EAAKC,KAAN,CAAWjF,MAAO,CAAEmH,gBAAiB,QAASC,cAAe,QAA7D,UACI,uBAAMrH,UAAU,mBAAhB,UACI,cAACwD,EAAA,EAAD,CAAM5B,KAAK,aADf,cAEI,MAHR,IAIE8D,EAASkB,OAJX,IAImB,cAACpD,EAAA,EAAD,CAAM5B,KAAK,MAAMT,QAAS,kBAAMrD,GAAS,IAAOmC,MAAO,CAAEqH,YAAa,aA1D7F5B,EAASkB,OAAS,GAClBlB,EAAS6B,KAAI,SAAC9K,GAAD,OACT,cAAC,EAAD,CAAiBA,QAASA,EAASuH,cAAeA,EAAeC,YAAawB,GAAuBhJ,EAAQ6H,UA8DjH,eAAClD,EAAA,EAAD,CAAOC,OAAK,EACRC,KAAMzD,EACN0D,QAAS,kBAAMzD,GAAS,IAF5B,UAII,eAACsD,EAAA,EAAMjB,OAAP,CAAcF,MAAO,CAAEuH,SAAU,UAAjC,2BAA2D,sBAAMvH,MAAO,CAAEuH,SAAU,UAAzB,8DAC3D,cAACpG,EAAA,EAAMI,QAAP,UACI,eAACiG,EAAA,EAAD,CAAMC,SAAU,SAAC5F,GAAD,OAAWgF,EAAWhF,IAAtC,UACI,cAAC2F,EAAA,EAAKE,MAAN,UACI,cAAClG,EAAA,EAAD,CACIC,OAAK,EACLC,MAAM,kBACNC,KAAK,cACLC,SAAU,SAACC,GAAD,OAAWgE,EAAehE,EAAME,OAAO4F,QACjDC,YAAa,oCAIrB,cAACJ,EAAA,EAAKE,MAAN,UACI,cAAClG,EAAA,EAAD,CACIC,OAAK,EACLC,MAAM,oBACNC,KAAK,iBACLC,SAAU,SAACC,GAAD,OAAWkE,EAAkBlE,EAAME,OAAO4F,QACpDC,YAAa,qBAM7B,eAACzG,EAAA,EAAM+B,QAAP,WACI,eAACC,EAAA,EAAD,CAAQlD,MAAM,QAAQG,UAAQ,EAACc,QAAS,SAACW,GAAD,OAAWgF,EAAWhF,IAA9D,UACI,cAAC0B,EAAA,EAAD,CAAM5B,KAAK,cADf,UAGA,eAACwB,EAAA,EAAD,CAAQlD,MAAM,MAAMG,UAAQ,EAACc,QAAS,kBAAMrD,GAAS,IAArD,UACI,cAAC0F,EAAA,EAAD,CAAM5B,KAAK,WADf,uB,QCrBLkG,G,OAhIQ,SAAC,GAAc,IAAZtC,EAAW,EAAXA,KAChBa,EAAWC,cADgB,EAES1I,mBAAS,IAFlB,mBAE1BmK,EAF0B,KAEXC,EAFW,OAGPpK,mBAAS,IAHF,mBAG1BqK,EAH0B,KAGnBC,EAHmB,OAIdtK,mBAASZ,EAAS6B,WAAWL,IAAI,UAA7CM,EAJ0B,sBAKVlB,mBAASZ,EAAS6B,WAAWL,IAAI,oBAAjD2J,EAL0B,sBAMXvK,mBAASZ,EAAS6B,WAAWL,IAAI,aAAhD4J,EAN0B,oBAOjC/D,qBAAU,WACFmB,GACA6C,EAAa7C,EAAK7F,OAGvB,IAEH0E,qBAAU,WACN,OAAO,WACHvF,EAAS2F,MACT2D,EAAY3D,MACZ0D,EAAa1D,SAGlB,IAGH,IAAM4D,EAAe,SAACC,GAClBxJ,EAASyF,GAAG,eAAe,SAAAjB,GACvB,GAAIgF,IAAehF,EAAKtC,IAAK,CACzB,IAAIwE,EAAOlC,EAAKmD,MAChBjB,EAAI,IAAUlC,EAAKtC,IACnBwE,EAAI,OAAa,UACjB0C,GAAS,SAAAD,GACL,OAAIA,IAAUA,EAAMM,MAAK,SAAAC,GAAY,OAAIA,EAAa7I,MAAQ6F,EAAK7F,OACzD,GAAN,mBAAWsI,GAAX,CAAkBzC,IAGf,YAAIyC,UAKvBE,EAAa5D,GAAG,SAAS,SAAAjB,GACrB,IAAmB,IAAfA,EAAKmD,MAAgB,CACrB,IAAMjI,EAAM4J,EAAY1I,MAAM4I,GAC9B9J,EAAIiK,KAAI,GACRjK,EAAIkK,eAAe7B,QAAO,SAAAtH,GACV,OAARA,GACAC,QAAQmJ,MAAMpJ,UAK9B6I,EAAY7D,GAAG,eAAe,SAAAjB,GACtBgF,IAAehF,EAAKtC,KACpB4H,EAAgBtF,EAAKtC,QAG7BoH,EAAY7D,GAAG,iBAAiB,SAAAjB,GACxBgF,IAAehF,EAAKtC,KACpB4H,EAAgBtF,EAAKtC,KAAK,OAgBhC6H,EAAe,SAACC,GAClB,IAAMC,EAAgBvD,EAAK7F,IAC3B,OAAOmJ,EAASC,EAAT,UAA4BD,EAA5B,YAAsCC,GAAtC,UAA2DA,EAA3D,YAA4ED,IAIjFF,EAAkB,SAACE,GAA8B,IAAtBE,IAAqB,yDAClDd,GAAS,SAAAe,GAML,OALAA,GAAaA,EAAUvC,SAAQ,SAAAlB,GACvBA,EAAK7F,MAAQmJ,IACbtD,EAAI,OAAJ,UAAoBwD,EAAY,SAAW,eAG5C,YAAIC,OAMbC,EAAe,SAAC1D,GAAD,MAA0B,WAAhBA,EAAK2D,QAEpC,OACI,sBAAKnJ,UAAU,gBAAf,UACI,cAACiF,EAAA,EAAKA,KAAN,CAAWjF,UAAU,yBAArB,SACI,eAACiF,EAAA,EAAKC,KAAN,WACI,iCACI,cAAC1B,EAAA,EAAD,CAAM5B,KAAK,SADf,qBAEQ,IAHZ,IAIOqG,GAASA,EAAMrB,OAJtB,SAOFqB,GAASA,EAAMV,KAAI,SAAA/B,GACjB,OACI,eAACP,EAAA,EAAKC,KAAN,CAEIG,OAAQG,EAAK7F,MAAQoI,EACrB5G,QAAS,kBA/CP,SAACqE,GACnB,IACM4D,EAAc,CAChB9E,GAFcuE,EAAarD,EAAK7F,KAGhCiC,KAAM4D,EAAK5D,MAEfyE,EAAS7J,EAAkB4M,IAC3B/C,EAASvJ,GAAkB,IAC3BkL,EAAiBxC,EAAK7F,KAuCSqE,CAAcwB,IAC7BvF,MAAO,CAAEkF,QAAS,GAAKkE,UAAW,UAClCrJ,UAAU,yBALd,UAOI,cAACwD,EAAA,EAAD,CACI5B,KAAK,SACL3B,MAAO,CAAE8C,OAAQ,OAAQD,MAAO,QAChC5C,MAAOgJ,EAAa1D,GAAQ,QAAU,QAV9C,IAaAA,EAAK5D,OAZI4D,EAAK7F,aCtBnB2J,G,OArFC,SAAC,GAAc,IAAZ9D,EAAW,EAAXA,KACTa,EAAWC,cADS,EAER1I,mBAASZ,EAAS6B,WAAWL,IAAI,UAA5CI,EAFmB,sBAGoBhB,mBAAS,IAH7B,mBAGnB2L,EAHmB,KAGFC,EAHE,OAIgB5L,mBAAS,IAJzB,mBAInBmK,EAJmB,KAIJC,EAJI,KAM1B3D,qBAAU,WAEFmB,GACA6C,EAAa7C,EAAK7F,OAGvB,CAAC6F,IAEJnB,qBAAU,WACN,OAAO,WACHzF,EAAQc,MAAR,UAAiB8F,EAAK7F,IAAtB,aAAqC8E,SAG1C,IAEH,IAAM4D,EAAe,SAAC/D,GAClB,IAAIoB,EAAW,GACf9G,EACKc,MAAM4E,GACN5E,MAAM,WACN6E,GAAG,eAAe,SAAAjB,GACf,IAAMmG,EAAc,aAAKnF,GAAIhB,EAAKtC,KAAQsC,EAAKmD,OAC/Cf,EAASc,KAAKiD,GACdD,EAAmB,YAAI9D,OAG/B9G,EACKc,MAAM4E,GACN5E,MAAM,WACN6E,GAAG,iBAAiB,SAAAjB,GACjB,IAAMoG,EAAe,aAAKpF,GAAIhB,EAAKtC,KAAQsC,EAAKmD,OAC1CkD,EAAiBjE,EAASkE,QAAO,SAAAnN,GACnC,OAAOA,EAAQ6H,KAAOoF,EAAgBpF,MAE1CoB,EAAWiE,EACXH,EAAmBG,OAqBzB3F,EAAgB,SAACvH,GACnB4J,EAAS7J,EAAkBC,IAC3BuL,EAAiBvL,GACjB4J,EAASvJ,GAAkB,KAK/B,OACI,cAAC,IAAMiD,SAAP,UACI,eAACkF,EAAA,EAAKA,KAAN,CAAWjF,UAAU,UAArB,UACI,eAACiF,EAAA,EAAKC,KAAN,CAAWjF,MAAO,CAAEmH,gBAAiB,QAASC,cAAe,QAA7D,UACI,uBAAMrH,UAAU,mBAAhB,UACI,cAACwD,EAAA,EAAD,CAAM5B,KAAK,SADf,iBAEI,MAHR,IAIM2H,EAAgB3C,OAJtB,OA1BR2C,EAAgB3C,OAAS,GACzB2C,EAAgBhC,KAAI,SAAA9K,GAAO,OACvB,cAACwI,EAAA,EAAKC,KAAN,CAEI/D,QAAS,kBAAM6C,EAAcvH,IAC7BmF,KAAMnF,EAAQmF,KACd3B,MAAO,CAAEkF,QAAS,IAClBE,OAAQ5I,EAAQ6H,KAAOyD,EAAczD,GALzC,SAOI,sBAAKtE,UAAU,mBAAf,cAAoCvD,EAAQmF,SANvCnF,EAAQ6H,c,2BCwFduF,G,OArII,SAAC,GAAc,IAAZrE,EAAW,EAAXA,KACZa,EAAWC,cADY,EAEH1I,oBAAS,GAFN,mBAEtBC,EAFsB,KAEfC,EAFe,OAGCF,mBAAS,IAHV,mBAGtBkM,EAHsB,KAGbC,EAHa,OAIKnM,mBAAS,IAJd,mBAItBoM,EAJsB,KAIXC,EAJW,OAKVrM,mBAASZ,EAAS6B,WAAWL,IAAI,UAA7CM,EALsB,sBAMOlB,mBAAS,IANhB,mBAMtBsM,EANsB,KAMVC,EANU,KAO7B9F,qBAAU,WACN,GAAImB,EAAM,CACN,IAAI0E,EAAa,GACjBpL,EACKY,MADL,UACc8F,EAAK7F,IADnB,YAEK4E,GAAG,eAAe,SAAAjB,GACf4G,EAAWE,QAAQ9G,EAAKmD,OACxB0D,EAAcD,SAG3B,CAAC1E,EAAM1G,IAEVuF,qBAAU,WACN,OAAO,WACHvF,EACKY,MADL,UACc8F,EAAK7F,IADnB,YAEK8E,SAGV,IAIH,IAA4B4F,EAkC5B,OACI,eAAC,IAAMtK,SAAP,WAEI,cAACuK,EAAA,EAAD,IACA,sBAAKtK,UAAU,aAAf,UACI,cAACoD,EAAA,EAAD,CAAQmH,KAAK,MAAMC,KAAK,QAAQtK,MAAM,OAAOiB,QAAS,kBAAMrD,GAAS,IAAOkC,UAAU,qBAvCtEqK,EAwCIH,EAvC5BG,EAAOzD,OAAS,GAAKyD,EAAO9C,KAAI,SAACrH,EAAOuK,GAAR,OAC5B,cAAC,IAAM1K,SAAP,UACI,qBAAKC,UAAU,mBAAmBmB,QAAS,kBAAMkF,GPQvCqE,EOR0DxK,EAAM4J,QPQlDa,EOR2DzK,EAAM8J,UPS9F,CACHtN,KAAMC,EACNC,QAAS,CACL8N,eACAC,qBALa,IAACD,EAAcC,GORxB,SACI,qBAAK3K,UAAU,gBAAgBC,MAAO,CAAE2K,WAAY1K,EAAM4J,SAA1D,SACI,qBAAK9J,UAAU,iBAAiBC,MAAO,CAAE2K,WAAY1K,EAAM8J,kBAHlDS,UA2CrB,cAACrJ,EAAA,EAAD,CACIC,OAAK,EACLC,KAAMzD,EACN0D,QAAS,kBAAMzD,GAAS,IACxBkC,UAAU,oBACVC,MAAO,CAAE4K,QAAS,OAAQC,WAAY,SAAUC,eAAgB,UALpE,SAOI,sBAAK/K,UAAU,oBAAf,UACI,cAACoB,EAAA,EAAMjB,OAAP,CAAcH,UAAU,6BAAxB,+BACA,eAACoB,EAAA,EAAMI,QAAP,CAAexB,UAAU,2BAAzB,UACI,sBAAKA,UAAU,iCAAf,UACI,cAACsF,EAAA,EAAD,CAAO0F,QAAQ,kBACXhL,UAAU,kCAEd,cAAC,gBAAD,CACI6B,SAAU,SAAC3B,GAAD,OAAW6J,EAAW7J,EAAM+K,MACtC/K,MAAO4J,EACP9J,UAAU,kCAGlB,sBAAKA,UAAU,iCAAf,UACI,cAACsF,EAAA,EAAD,CAAO0F,QAAQ,qBACXhL,UAAU,kCAEd,cAAC,gBAAD,CACI6B,SAAU,SAAC3B,GAAD,OAAW+J,EAAa/J,EAAM+K,MACxC/K,MAAO8J,EACPhK,UAAU,qCAItB,eAACoB,EAAA,EAAM+B,QAAP,CAAenD,UAAU,6BAAzB,UACI,eAACoD,EAAA,EAAD,CACIlD,MAAM,QAAQG,UAAQ,EACtBc,QAjEA,WAChB2I,GAAWE,GACXlL,EACKY,MADL,UACc8F,EAAK7F,IADnB,YAEK6G,OACA5G,OAAO,CACJkK,UACAE,cAEH3K,MAAK,WACFvB,GAAS,MAEZwB,OAAM,SAAAC,GACHC,QAAQC,IAAIF,OAqDJS,UAAU,8BAHd,UAKI,cAACwD,EAAA,EAAD,CAAM5B,KAAK,cALf,iBAQA,eAACwB,EAAA,EAAD,CACIlD,MAAM,MACNG,UAAQ,EACRc,QAAS,kBAAMrD,GAAS,IACxBkC,UAAU,8BAJd,UAMI,cAACwD,EAAA,EAAD,CAAM5B,KAAK,WANf,yBC1FTsJ,EA9BG,SAACvN,GAiBf,OACI,gCACI,qBAAKqC,UAAU,kBAAf,SACI,cAAC,EAAD,CAAWW,SAAUhD,EAAMgD,SAAU+J,aAAc/M,EAAM+M,iBAE7D,qBAAK1K,UAAU,sBAAf,SAnBqB,YAArBrC,EAAMwN,WACE,cAAC,EAAD,CAAU3F,KAAM7H,EAAMgD,SAAU8E,iBAAkB9H,EAAMsG,cAEtC,kBAArBtG,EAAMwN,WACH,cAAC,EAAD,CAAgB3F,KAAM7H,EAAMgD,WAEV,YAArBhD,EAAMwN,WACH,cAAC,EAAD,CAAS3F,KAAM7H,EAAMgD,WAGrB,cAAC,EAAD,CAAY6E,KAAM7H,EAAMgD,iB,6CCsC7ByK,EAvDG,SAAC,GAAqC,IAAnCvN,EAAkC,EAAlCA,MAAOC,EAA2B,EAA3BA,SAAUuN,EAAiB,EAAjBA,WAAiB,EAC3BzN,mBAAS,MADkB,mBAC5CmE,EAD4C,KACtCuJ,EADsC,OAE9B1N,mBAAS,CAAC,aAAc,YAAa,cAAnD2N,EAF4C,oBAqBnD,OACI,cAAC,IAAMxL,SAAP,UACI,eAACqB,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAMzD,EAAO0D,QAAS,kBAAMzD,GAAS,IAAlD,UACI,cAACsD,EAAA,EAAMjB,OAAP,mCACA,cAACiB,EAAA,EAAMI,QAAP,UACI,cAACC,EAAA,EAAD,CACIC,OAAK,EACLC,MAAM,sBACNC,KAAK,OACLlF,KAAK,OACLmF,SAAU,SAACC,GAAD,OA3Bd,SAACA,GACb,IAAMC,EAAOD,EAAME,OAAOC,MAAM,GAC5BF,GACAuJ,EAAQvJ,GAwByByJ,CAAQ1J,QAGrC,eAACV,EAAA,EAAM+B,QAAP,WACI,eAACC,EAAA,EAAD,CACIlD,MAAM,QACNG,UAAQ,EACRc,QAAS,kBA5BZ,WACb,GAAa,OAATY,GACIwJ,EAAWE,SAASC,IAAKC,OAAO5J,EAAKH,OAAQ,CAC7C,IAAMgK,EAAW,CAAE7M,YAAa2M,IAAKC,OAAO5J,EAAKH,OACjDyJ,EAAWtJ,EAAM6J,GACjB9N,GAAS,GACTwN,EAAQ,OAsBeO,IAHnB,UAIC,cAACrI,EAAA,EAAD,CAAM5B,KAAK,cAJZ,UAOA,eAACwB,EAAA,EAAD,CACIlD,MAAM,MACNG,UAAQ,EACRc,QAAS,kBAAMrD,GAAS,IAH5B,UAIC,cAAC0F,EAAA,EAAD,CAAM5B,KAAK,WAJZ,qB,UC5BLkK,GAdK,SAAC,GAAD,IAAGC,EAAH,EAAGA,YAAaC,EAAhB,EAAgBA,gBAAhB,MACA,cAAhBD,GACI,cAACE,GAAA,EAAD,CACIjM,UAAU,gBACVkM,QAASF,EACTG,UAAQ,EACRC,YAAU,EACV5B,KAAK,SACLnK,UAAQ,K,UC4OLgM,I,cA7OK,SAAC,GAAwD,IAAtD7G,EAAqD,EAArDA,KAAM/I,EAA+C,EAA/CA,QAASM,EAAsC,EAAtCA,iBAAkBuP,EAAoB,EAApBA,cAAoB,EAC1C1O,mBAAS,IADiC,mBACjE2O,EADiE,KACxDC,EADwD,OAE1C5O,oBAAS,GAFiC,mBAEjE6O,EAFiE,KAExDC,EAFwD,OAG5C9O,mBAAS,IAHmC,mBAGjE+O,EAHiE,KAGzDC,EAHyD,OAI9ChP,oBAAS,GAJqC,mBAIjEC,EAJiE,KAI1DC,EAJ0D,OAKlCF,mBAAS,IALyB,mBAKjEmO,EALiE,KAKpDc,EALoD,OAMnDjP,mBAASZ,EAASuB,UAAUC,OAA1CC,EANiE,sBAOpDb,mBAASZ,EAAS6B,WAAWL,IAAI,WAA9C4H,EAPiE,sBAQ1BxI,mBAAS,GARiB,mBAQjEoO,EARiE,KAQhDc,EARgD,OASlClP,oBAAS,GATyB,mBASjEmP,EATiE,KASpDC,EAToD,KAWlEC,EAAkB3O,iBAAO,MAG/B+F,qBAAU,WACN,OAAO,WACH+B,EAAU3B,SAGf,IAGH,IAAMyI,EAAgB,WAAqB,IAApBC,EAAmB,uDAAT,KACvBC,EAAa,CACfC,UAAWrQ,EAAS6B,SAASyO,YAAYC,UACzC/H,KAAM,CACFlB,GAAIkB,EAAK7F,IACTiC,KAAM4D,EAAK1E,YACXjB,OAAQ2F,EAAKpG,WAUrB,OAPgB,OAAZ+N,EACAC,EAAU,MAAYD,EAGtBC,EAAU,QAAcb,EAGrBa,GAyBLI,EAAc,WAChB,GAAIjB,EACAG,GAAW,GACXJ,IACK5M,MAAMjD,EAAQ6H,IACdkC,OACAiC,IAAIyE,KACJ7N,MAAK,WACFqN,GAAW,GACXF,EAAW,IACXI,EAAU,IACVxG,EACK1G,MAAMjD,EAAQ6H,IACd5E,MAAM8F,EAAK7F,KACXkH,YAERvH,OAAM,SAAAC,GACHC,QAAQC,IAAIF,GACZmN,GAAW,GACXE,EAAU,CAACrN,WAGlB,CACD,IAAIA,EAAM,GACVA,EAAIiH,KAAK,iBACToG,EAAUrN,GACVC,QAAQC,IAAIF,KAsBdkO,EAAiB,SAAAlB,GACnB,OAAOA,EAAQmB,QAAQ,sBAAsB,SAAAC,GACzCA,EAAIA,EAAED,QAAQ,KAAM,IACpB,IAAIE,EAAQC,KAAWC,OAAOH,GAC9B,GAAqB,qBAAVC,EAAuB,CAC9B,IAAIG,EAAUH,EAAMI,OACpB,GAAuB,qBAAZD,EACP,OAAOA,EAIf,OADAJ,EAAI,IAAMA,EAAI,QAwChBM,EAAkB,SAACC,EAAa1P,EAAK2P,GACvC3P,EAAIkB,MAAMyO,GACL3H,OACAiC,IAAIyE,EAAcgB,IAClB7O,MAAK,WACFwN,EAAe,WAElBvN,OAAM,SAAAC,GACHC,QAAQC,IAAIF,GACZqN,GAAU,SAAAwB,GAAI,4BAAQA,GAAR,CAAc7O,WAIxC,OACI,cAAC,IAAMQ,SAAP,UACI,sBAAKC,UAAW2M,EAAO/F,OAAS,GAAK+F,EAAOpF,KAAI,SAAAoB,GAAK,OAAIA,EAAM8C,SAAS,cAAc,oBAAsB,cAA5G,UAGKsB,GACG,cAAC,KAAD,CACItE,IAAI,QACJ4F,SAjFG,SAACT,GACpB,IACMU,EAAab,EAAe,GAAD,OADdlB,EACc,YAAkBqB,EAAMW,SACzD/B,EAAW8B,GACXtB,GAAe,GACfwB,YAAW,kBAAMvB,EAAgBxJ,QAAQgL,UAAS,IA6ElCC,MAAM,kBACNd,MAAM,WACNe,aAAa,QACbC,MAAM,OACN3O,MAAO,CAAEmF,SAAU,WAAYyJ,IAAK,SAAUC,KAAM,WAG5D,cAAC1L,EAAA,EAAD,CACIpD,UAAU,uBACVkB,SAA0B,cAAhB6K,EACV5K,QAAS,kBAAMrD,GAAS,IACxByM,KAAK,OACLtK,MAAO,CAAE8O,aAAc,OAAQzO,QAAS,UAE5C,cAAC8C,EAAA,EAAD,CACImH,KAAMwC,EAAc,QAAU,gBAC9B5L,QAAS,WAtErB6L,GADcD,IAwEF/M,UAAU,uBAEd,cAACoD,EAAA,EAAD,CACIjC,QAAS,kBAAMqM,KACftM,SAAUuL,EACVlC,KAAK,OACLvK,UAAU,wBAEd,sBAAMA,UAAU,UAAhB,SACI,0BACIxB,IAAKyO,EACLrL,KAAK,UACLC,SAAU,SAACC,GAAD,OAAW0K,EAAW1K,EAAME,OAAO4F,QAC7CoH,UA3KE,SAAClN,GACfA,EAAMmN,SAA6B,KAAlBnN,EAAMoN,SACvB1B,IAEAjB,EACAnG,EACK1G,MAAMjD,EAAQ6H,IACd5E,MAAM8F,EAAK7F,KACX8I,IAAIjD,EAAK1E,aAGdsF,EACK1G,MAAMjD,EAAQ6H,IACd5E,MAAM8F,EAAK7F,KACXkH,UA8JOsI,KAAK,IACLtH,YAAY,wBACZD,MAAO2E,EACPvM,UAAW2M,EAAO/F,OAAS,GAAK+F,EAAOpF,KAAI,SAAAoB,GAAK,OAAIA,EAAM8C,SAAS,cAAc,8BAAgC,wBACjHxL,MAAO,CAAE8O,aAAc,OAAQjM,MAAO,QAASsM,OAAQ,YAG/D,cAAC,EAAD,CAEIvR,MAAOA,EACPC,SAAUA,EACVuN,WA7FG,SAACtJ,EAAM6J,GACtB,IAAMuC,EAAe1R,EAAQ6H,GACvB9F,EAAM8N,IACN+C,EAAQ,UAzCVtS,EACM,gBAAN,OAAuBN,EAAQ6H,IAExB,cAsCG,YAAmBgL,cAAnB,QACRC,EAAa9Q,EAAWiB,MAAM2P,GAAUhM,IAAItB,EAAM6J,GACxDiB,EAAe,aAEf0C,EAAWhL,GAAG,kBAAkB,SAAAjB,GAC5B,IAAMkM,EAAmBC,KAAKC,MAAOpM,EAAKqM,iBAAmBrM,EAAKsM,WAAc,KAChF9C,EAAmB0C,MACpB,SAAAjQ,GACCC,QAAQC,IAAIF,GACZqN,GAAU,SAAAwB,GAAI,4BAAQA,GAAR,CAAc7O,OAC5BsN,EAAe,YAGnB0C,EAAWlQ,MAAK,WACZkQ,EAAWM,SAASrR,IAAI+E,iBACnBlE,MAAK,SAAA6O,GACFD,EAAgBC,EAAa1P,EAAK2P,MAErC7O,OAAM,SAAAC,GACHqN,GAAU,SAAAwB,GAAI,4BAAQA,GAAR,CAAc7O,OAC5BsN,EAAe,kBAwEnB,cAAC,GAAD,CACId,YAAaA,EACbC,gBAAiBA,WChMtB8D,I,OA3CQ,SAAC,GAAsH,IAApHjK,EAAmH,EAAnHA,YAAakK,EAAsG,EAAtGA,eAAgBC,EAAsF,EAAtFA,iBAAkBC,EAAoE,EAApEA,cAAelT,EAAqD,EAArDA,iBAAkBmT,EAAmC,EAAnCA,iBAAkBC,EAAiB,EAAjBA,WAMxH,OACI,cAAC,IAAMpQ,SAAP,UACI,sBAAKC,UAAU,gBAAf,UAEI,eAACG,EAAA,EAAD,CAAQuB,MAAM,OAAOtB,GAAG,KAAKgQ,QAAQ,OAAOpQ,UAAU,yBAAtD,UACI,uBAAMA,UAAU,sBAAhB,UACK6F,GACC9I,GAEE,cAACyG,EAAA,EAAD,CACIvD,MAAO,CAAEqH,YAAa,UACtBnG,QAASgP,EACTvO,KAAMsO,EAAmB,OAAS,eAClChQ,MAAOgQ,EAAmB,SAAW,aAGjD,cAAC/P,EAAA,EAAOkQ,UAAR,CAAkBpQ,MAAO,CAAEqQ,WAAY,SAAvC,SACKP,OAIT,cAAC5P,EAAA,EAAD,CAAQH,UAAU,wBAAlB,SACI,cAACyB,EAAA,EAAD,CACIgL,QAASwD,EACTpO,SAAU,SAACC,GAAD,OAAWkO,EAAiBlO,IACtC0I,KAAK,OACL5I,KAAK,aACLiG,YAAY,kBALhB,SAOI,uBAAO5H,MAAO,CAAE8O,aAAc,QAASnE,WAAY,4C,qBCA5D2F,I,OAlCK,SAAC,GAAuB,IAOnBC,EAPFhL,EAAoB,EAApBA,KAAM+G,EAAc,EAAdA,QAazB,OAEI,cAAC,IAAMxM,SAAP,UACI,sBAAKC,UAdQ,SAACuM,EAAS/G,GAC3B,OAAO+G,EAAQ/G,KAAKlB,KAAOkB,EAAK7F,IAAM,gBAAkB,mBAapC8Q,CAAalE,EAAS/G,GAAtC,UAEI,sBAAKxF,UAAU,iBAAf,UACI,sBAAKA,UAAU,uBAAf,eAA0CuM,EAAQ/G,KAAK5D,QACvD,sBAAK5B,UAAU,OAAf,UAXA,SAACuM,GACb,OAAOA,EAAQmE,eAAe,WAAanE,EAAQmE,eAAe,WAWjDC,CAAQpE,GAAW,cAAC9L,EAAA,EAAD,CAAOC,IAAK6L,EAAQ1J,MAAO7C,UAAU,UACrD,sBAAMA,UAAU,0BAAhB,SAA4CuM,EAAQvB,UAExD,qBAAKhL,UAAU,uBAAf,UAjBCwQ,EAiBkDjE,EAAQc,UAjBjDuD,KAAOJ,GAAMK,mBAqB/B,qBAAK7Q,UAAU,SAAf,SAAwB,cAACS,EAAA,EAAD,CAAOZ,QAAM,EAACa,IAAK6L,EAAQ/G,KAAK3F,OAAQI,MAAO,CAAE8C,OAAQ,SAAUD,MAAO,qB,oBCvBnGgO,GARC,WACZ,OACI,cAACC,GAAA,EAAD,CAAQ1L,QAAM,EAAd,SACI,cAAC2L,GAAA,EAAD,CAAQxG,KAAK,OAAOQ,QAAS,yBCM1BiG,GATA,kBACX,sBAAKjR,UAAU,SAAf,UACI,qBAAKA,UAAU,gBACf,qBAAKA,UAAU,gBACf,qBAAKA,UAAU,oBCsERkR,GAtEY,SAAC,GAA+B,IAA7BjN,EAA4B,EAA5BA,YAAatD,EAAe,EAAfA,SAAe,EAChB/C,mBAAS,IADO,mBAC/CuT,EAD+C,KAClCC,EADkC,OAEpBxT,mBAAS,IAFW,mBAE/CyT,EAF+C,KAEpCC,EAFoC,OAGlC1T,mBAASZ,EAAS6B,WAAWL,IAAI,WAA9C4H,EAH+C,oBAKtD/B,qBAAU,WAKN,OAJIJ,GACAsN,EAAsBtN,EAAYK,IAG/B,kBAAMkN,EAAgBH,MAG9B,CAACpN,IAGJ,IAAMuN,EAAkB,SAACH,GACrBA,EAAU3K,SAAQ,SAAA+K,GACdA,EAASjT,IAAIkB,MAAM+R,EAASnN,IAAIG,IAAIgN,EAAS3P,UAEjDsP,EAAe,KAEbM,EAAiB,SAACpN,EAAI9F,EAAKsD,GAK7B,IAAe,IAJDuP,EAAUM,WAAU,SAAAF,GAC9B,OAAOA,EAASnN,KAAOA,GAAMmN,EAASjT,MAAQA,GAAOiT,EAAS3P,QAAUA,KAG1D,CACd,IAAM8P,EAAc,CAAEtN,KAAI9F,MAAKsD,SAC/BwP,EAAa,GAAD,mBAAKD,GAAL,CAAgBO,OAK9BL,EAAwB,SAAC5M,GAC3B,GAAIV,GAA6B,OAAdU,EAAoB,CACnC,IAAIkN,EAAkB,GACtBzL,EACK1G,MAAMiF,GAAWJ,GAAG,eAAe,SAAAjB,GAC5BA,EAAKtC,MAAQL,EAAShB,MACtBkS,EAAkBA,EAAgBC,OAAO,CACrCxN,GAAIhB,EAAKtC,IACTY,KAAM0B,EAAKmD,QAEf2K,EAAe,YAAIS,QAG/BH,EAAe/M,EAAWyB,EAAW,eACrCA,EACK1G,MAAMiF,GAAWJ,GAAG,iBAAiB,SAAAjB,IAEnB,IADDuO,EAAgBF,WAAU,SAAAnM,GAAI,OAAIA,EAAKlB,KAAOhB,EAAKtC,SAE7D6Q,EAAkBA,EAAgBjI,QAAO,SAAApE,GAAI,OAAIA,EAAKlB,KAAOhB,EAAKtC,OAClEoQ,EAAe,YAAIS,QAI/BH,EAAe/M,EAAWyB,EAAW,mBAG7C,OACI+K,EAAYvK,OAAS,GAAKuK,EAAY5J,KAAI,SAAA/B,GAAI,OAC1C,sBAAKvF,MAAO,CAAE4K,QAAS,OAAQC,WAAY,SAAUiH,aAAc,SAAnE,UACI,uBAAM/R,UAAU,eAAhB,UAAgCwF,EAAK5D,KAArC,cACA,cAAC,GAAD,MAF+E4D,EAAKlB,QC1DrF0N,I,OARQ,WACnB,OACI,qBAAKhS,UAAU,kBAAf,wBCsPOiS,GAzOC,SAACtU,GAAW,IAChBsG,EAA4CtG,EAA5CsG,YAAatD,EAA+BhD,EAA/BgD,SAAU5D,EAAqBY,EAArBZ,iBACzBsJ,EAAWC,cACX4L,EAAa5T,mBAHI,EAIqBV,mBAAS,IAJ9B,mBAIhBmS,EAJgB,KAIAoC,EAJA,OAKFvU,mBAASZ,EAAS6B,WAAWL,IAAI,aAA/C4T,EALgB,sBAMKxU,mBAASZ,EAAS6B,WAAWL,IAAI,oBAAtD6T,EANgB,sBAOLzU,mBAASZ,EAAS6B,WAAWL,IAAI,UAA5CI,EAPgB,sBAQShB,mBAAS,IARlB,mBAQhB0U,EARgB,KAQNC,EARM,OASqB3U,oBAAS,GAT9B,mBAShB4U,EATgB,KASAC,EATA,OAUe7U,mBAAS,IAVxB,mBAUhB8U,EAVgB,KAUHC,EAVG,OAWiB/U,mBAAS,IAX1B,mBAWhBgV,EAXgB,KAWFC,EAXE,OAYmBjV,oBAAS,GAZ5B,mBAYhBqS,EAZgB,KAYD6C,EAZC,OAayBlV,oBAAS,GAblC,mBAahBsS,EAbgB,KAaE6C,EAbF,OAcFnV,mBAASZ,EAAS6B,WAAWL,IAAI,oBAA/CwU,EAdgB,sBAeWpV,mBAAS,IAfpB,mBAehByT,GAfgB,KAeLC,GAfK,KAgBvBjN,qBAAU,WACF1D,GAAYsD,IACZuN,GAAgBH,IAChB4B,GAAgBhP,EAAYK,IAC5B4O,GAAqBjP,EAAYK,GAAI3D,EAAShB,QAGnD,CAACgB,EAAUsD,EAAaoN,KAE3BhN,qBAAU,WACN6N,EAAWzO,QAAQ0P,eAAe,CAAEC,SAAU,SAAUC,MAAO,YAEhE,CAACf,IAMJjO,qBAAU,WACN,OAAO,WACHmN,GAAgBH,IAChB2B,EAAWvO,SAGhB,IAEH,IAoJ2BhI,GApJrB+U,GAAkB,SAACH,GACrBA,EAAU3K,SAAQ,SAAA+K,GACdA,EAASjT,IAAIkB,MAAM+R,EAASnN,IAAIG,IAAIgN,EAAS3P,WAiB/CoR,GAAuB,SAACvO,EAAWmE,GACrClK,EACKc,MAAMoJ,GACNpJ,MAAM,WACN4T,KAAK,SACLjU,MAAK,SAAAkU,GACF,GAAmB,OAAfA,EAAK9M,MAAgB,CACrB,IACM+M,EADaC,OAAOC,KAAKH,EAAK9M,OACLgF,SAAS9G,GACxCoO,EAAoBS,QAK9BP,GAAkB,SAAC3O,GACrB,IAAIqP,EAAiB,GACfnV,EAAM8N,KACZ9N,EAAIkB,MAAM4E,GAAIC,GAAG,eAAe,SAAAjB,GAC5BqQ,EAAenN,KAAKlD,EAAKmD,OACzB8L,EAAY,GAAD,OAAKoB,IAChBlB,GAAkB,GAClBmB,GAAiBD,GACjBE,GAAeF,MAnCA,SAACrP,EAAI9F,EAAKsD,GAK7B,IAAe,IAJDuP,GAAUM,WAAU,SAAAF,GAC9B,OAAOA,EAASnN,KAAOA,GAAMmN,EAASjT,MAAQA,GAAOiT,EAAS3P,QAAUA,KAG1D,CACd,IAAM8P,EAAc,CAAEtN,KAAI9F,MAAKsD,SAC/BwP,GAAa,GAAD,mBAAKD,IAAL,CAAgBO,MA8BhCF,CAAepN,EAAI9F,EAAK,gBAsCtB8N,GAAgB,WAClB,OAAOvP,EAAmBsV,EAAoBD,GAI5CwB,GAAmB,SAACtB,GACtB,IAAMwB,EAAcxB,EAASyB,QAAO,SAACC,EAAKzH,GAItC,OAHKyH,EAAIvI,SAASc,EAAQ/G,KAAK5D,OAC3BoS,EAAIxN,KAAK+F,EAAQ/G,KAAK5D,MAEnBoS,IACR,IACGC,EAASH,EAAYlN,OAAS,GAA4B,IAAvBkN,EAAYlN,OACrDuL,EAAkB,GAAD,OAAI2B,EAAYlN,OAAhB,gBAA8BqN,EAAS,IAAM,MAG5DJ,GAAiB,SAACvB,GACpB,IAAI4B,EAAY5B,EAASyB,QAAO,SAACC,EAAKzH,GAUlC,OATIA,EAAQ/G,KAAK5D,QAAQoS,EACrBA,EAAIzH,EAAQ/G,KAAK5D,MAAMmD,OAAS,EAGhCiP,EAAIzH,EAAQ/G,KAAK5D,MAAQ,CACrB/B,OAAQ0M,EAAQ/G,KAAK3F,OACrBkF,MAAO,GAGRiP,IACR,IACH3N,ElBhIoB,SAAA6N,GACxB,MAAO,CACHxX,KAAMC,EACNC,QAAS,CACLsX,ckB4HKC,CAAaD,KA2BpBE,GAAiB,SAAC9B,GAAD,OACnBA,EAAS1L,OAAS,EAAI0L,EAAS/K,KAAI,SAAAgF,GAAO,OACtC,cAAC,GAAD,CAEIA,QAASA,EACT/G,KAAM7E,GAFD4L,EAAQc,cAIhB,cAAC,GAAD,KAST,OACI,eAAC,IAAMtN,SAAP,WACI,cAAC,GAAD,CACIiQ,iBAxCa,SAAAlO,GACrB,IAAMuS,EAASvS,EAAME,OAAO4F,MAC5B+K,EAAe0B,GACfvB,GAAiB,GAEjB,IACMF,EADc,YAAON,GACSyB,QAAO,SAACC,EAAKzH,GAM7C,OAJMA,EAAQvB,SAAWuB,EAAQvB,QAAQsJ,cAAc7I,SAAS4I,EAAOC,gBAAqB/H,EAAQ/G,MAAQ+G,EAAQ/G,KAAK5D,MAAQ2K,EAAQ/G,KAAK5D,KAAK0S,cAAc7I,SAAS4I,EAAOC,iBAE7KN,EAAIxN,KAAK+F,GAENyH,IACR,IACHnB,EAAgBD,GAChBpE,YAAW,kBAAMsE,GAAiB,KAAQ,MA0BlCjN,aATepJ,GASiBwH,EARjCxH,GAAO,UAAMM,EAAmB,IAAM,KAA/B,OAAqCN,GAAQmF,MAAS,IAS5DmO,eAAgBA,EAChBE,cAAeA,EACflT,iBAAkBA,EAClBoT,WAlHO,WACf,IAAMoE,GAAyBrE,EAC/B6C,EAAoBwB,GAEhBA,EACA3V,EACKc,MADL,UACciB,EAAShB,IADvB,aAEKC,OAFL,eAGSqE,EAAYK,GAAK,CACd1C,KAAMqC,EAAYrC,KAClBqF,QAAShD,EAAYgD,QACrBC,UAAW,CACPtF,KAAMqC,EAAYiD,UAAUtF,KAC5B/B,OAAQoE,EAAYiD,UAAUrH,WAM9CjB,EACKc,MADL,UACciB,EAAShB,IADvB,aAEKD,MAAMuE,EAAYK,IAClBuC,QAAO,SAAAtH,GACQ,OAARA,GACAC,QAAQC,IAAIF,OA2FpB2Q,iBAAkBA,EAClB6C,oBAAqBA,IAGzB,eAACyB,EAAA,EAAQC,MAAT,CAAezU,UAAU,WAAWC,MAAO,CAAEmF,SAAU,YAAvD,UACMoN,EACE,cAAC,IAAMzS,SAAP,UACI,cAAC,GAAD,MAGJ,KACWqU,GAAd1B,EAA6BE,EAA+BN,GAC7D,cAAC,GAAD,CACI3R,SAAUA,EACVsD,YAAaA,IAEjB,qBAAKzF,IAAK0T,OAGd,cAAC,GAAD,CACInV,iBAAkBA,EAClBN,QAASwH,EACTuB,KAAM7E,EACN2L,cAAeA,S,8BC3JhBoI,GAtFG,SAAC,GAA4C,IAA1CC,EAAyC,EAAzCA,eAAgBlY,EAAyB,EAAzBA,QAASyX,EAAgB,EAAhBA,UAAgB,EACpBtW,mBAAS,GADW,mBACnDgX,EADmD,KACtCC,EADsC,KAkBpDC,EAAe,SAAAC,GAAG,MAAI,UAA4BA,EAA3BA,EAAM,GAAa,IAARA,EAAZ,kBAE5B,OAAIJ,EAAuB,KAEvB,cAAC,IAAM5U,SAAP,UACI,eAACiV,GAAA,EAAD,CAASvI,SAAUhQ,EAASwD,MAAO,CAAE6C,MAAO,SAA5C,UACI,eAAC3C,EAAA,EAAD,CAAQC,GAAG,KAAK6U,SAAS,MAAzB,wBACgBxY,GAAWA,EAAQmF,QAEnC,eAACsT,GAAA,EAAD,CAAWC,QAAM,EAACF,SAAS,OAA3B,UAEI,eAACC,GAAA,EAAUE,MAAX,CACI/P,OAAwB,IAAhBuP,EACRS,MAAO,EACPlU,QAAS,SAACW,EAAD,GAAuB,IAAbuT,EAAY,EAAZA,MAAsCR,EAAxBD,IAAgBS,GAAwB,EAAoBA,IAHjG,UAKI,cAAC7R,EAAA,EAAD,CAAM5B,KAAK,aACX,cAAC4B,EAAA,EAAD,CAAM5B,KAAK,SANf,qBASA,cAACsT,GAAA,EAAU1T,QAAX,CACI6D,OAAwB,IAAhBuP,EADZ,SAGKnY,GAAWA,EAAQwK,UAGxB,eAACiO,GAAA,EAAUE,MAAX,CACI/P,OAAwB,IAAhBuP,EACRS,MAAO,EACPlU,QAAS,SAACW,EAAD,GAAuB,IAAbuT,EAAY,EAAZA,MAAsCR,EAAxBD,IAAgBS,GAAwB,EAAoBA,IAHjG,UAKI,cAAC7R,EAAA,EAAD,CAAM5B,KAAK,aACX,cAAC4B,EAAA,EAAD,CAAM5B,KAAK,gBANf,iBASA,cAACsT,GAAA,EAAU1T,QAAX,CACI6D,OAAwB,IAAhBuP,EADZ,SAGI,cAACU,GAAA,EAAD,UACKpB,GAtDC,SAACA,GAAD,OACtBT,OAAO8B,QAAQrB,GACVsB,MAAK,SAACC,EAAGC,GAAJ,OAAUA,EAAE,GAAG3Q,MAAQ0Q,EAAE,GAAG1Q,SACjCwC,KAAI,WAAakD,GAAb,uBAAEzJ,EAAF,KAAOyF,EAAP,YACD,eAAC6O,GAAA,EAAKpQ,KAAN,WACI,cAACzE,EAAA,EAAD,CAAOZ,QAAM,EAACa,IAAK+F,EAAI5G,SACvB,eAACyV,GAAA,EAAK9T,QAAN,WACI,cAAC8T,GAAA,EAAKnV,OAAN,CAAaC,GAAG,IAAhB,SAAsBY,IACtB,eAACsU,GAAA,EAAKK,YAAN,eAAoBb,EAAarO,EAAI1B,eAJ7B0F,MASnBmL,MAAM,EAAG,GAyCoBC,CAAkB3B,OAIxC,eAACgB,GAAA,EAAUE,MAAX,CACI/P,OAAwB,IAAhBuP,EACRS,MAAO,EACPlU,QAAS,SAACW,EAAD,GAAuB,IAAbuT,EAAY,EAAZA,MAAsCR,EAAxBD,IAAgBS,GAAwB,EAAoBA,IAHjG,UAKI,cAAC7R,EAAA,EAAD,CAAM5B,KAAK,aACX,cAAC4B,EAAA,EAAD,CAAM5B,KAAK,qBANf,gBASA,cAACsT,GAAA,EAAU1T,QAAX,CACI6D,OAAwB,IAAhBuP,EADZ,SAGI,eAACzU,EAAA,EAAD,CAAQC,GAAG,KAAX,UACI,cAACK,EAAA,EAAD,CAAOqV,UAAQ,EAACpV,IAAKjE,GAAWA,EAAQyK,UAAUrH,SACjDpD,GAAWA,EAAQyK,UAAUtF,mBCwD3CmU,GA/HH,WAAO,IAAD,EACgBnY,mBAAS,IADzB,mBACT+C,EADS,KACCqV,EADD,OAEsBpY,mBAAS,IAF/B,mBAETqG,EAFS,KAEI2B,EAFJ,OAG4BhI,mBAAS,IAHrC,mBAGT+W,EAHS,KAGO7X,EAHP,OAIkBc,mBAAS,IAJ3B,mBAITsW,EAJS,KAIEC,EAJF,OAKwBvW,mBAAS,WALjC,mBAKT8M,EALS,KAKKuL,EALL,OAM4BrY,mBAAS,WANrC,mBAMT+M,EANS,KAMOuL,EANP,OAOoBtY,mBAAS,WAP7B,mBAOTuN,EAPS,KAOGgL,EAPH,KAQZ9L,EAAS+L,aAAY,SAAAC,GAAK,OAAIA,EAAMhM,UACpC7E,EAAO4Q,aAAY,SAAAC,GAAK,OAAIA,EAAM7Q,KAAK7G,eACvClC,EAAU2Z,aAAY,SAAAC,GAAK,OAAIA,EAAM5Z,QAAQI,kBAC7CE,EAAmBqZ,aAAY,SAAAC,GAAK,OAAIA,EAAM5Z,QAAQM,oBACtDuZ,EAAgBF,aAAY,SAAAC,GAAK,OAAIA,EAAM5Z,QAAQyX,aACvD7P,qBAAU,WACR2R,EAAYxQ,KACX,CAACA,IAEJnB,qBAAU,WACRuB,EAAenJ,KACd,CAACA,IAEJ4H,qBAAU,WACRvH,EAAkBC,KACjB,CAACA,IAEJsH,qBAAU,WACR8P,EAAamC,KACZ,CAACA,IAEJjS,qBAAU,WACR4R,EAAgB5L,EAAOK,cACvBwL,EAAkB7L,EAAOM,kBACxB,CAACN,IAEJ,IAAMkM,EAAkB,SAACC,EAAD,GAAkB,IAAZ5U,EAAW,EAAXA,KAC5BuU,EAAcvU,IAKhB,OACE,qBAAK5B,UAAU,MAAf,SACE,qBAAKA,UAAU,wBAAf,SACE,sBAAKA,UAAU,wBAAwBC,MAAO,CAAEmH,gBAAiBsD,GAAjE,UACE,sBAAK1K,UAAU,aAAf,UACE,sBAAKA,UAAU,oBAAf,cAAoC,cAACwD,EAAA,EAAD,CAAM5B,KAAK,kBAC/C,qBAAK5B,UAAU,qBAAf,SACE,eAACiF,EAAA,EAAD,CAAM+E,WAAS,EAACyM,UAAQ,EAACzW,UAAU,OAAOC,MAAO,CAAE6C,MAAO,QAA1D,UACE,cAACmC,EAAA,EAAKC,KAAN,CACEtD,KAAK,UACLyD,OAAuB,YAAf8F,EACRhK,QAASoV,EACTtW,MAAO,CAAEC,MAAO,SAChBF,UAAU,aALZ,SAOE,qBAAKA,UAA0B,YAAfmL,EAAA,oBAAiD,mBAAjE,SAAqF,cAAC3H,EAAA,EAAD,CAAM5B,KAAK,iBAElG,cAACqD,EAAA,EAAKC,KAAN,CACEtD,KAAK,gBACLyD,OAAuB,kBAAf8F,EACRhK,QAASoV,EACTvW,UAAU,aACVC,MAAO,CAAEC,MAAO,SALlB,SAOE,qBAAKF,UAA0B,kBAAfmL,EAAA,oBAAuD,mBAAvE,SAA4F,cAAC3H,EAAA,EAAD,CAAM5B,KAAK,oBAEzG,eAACqD,EAAA,EAAKC,KAAN,CACEtD,KAAK,UACLyD,OAAuB,YAAf8F,EACRhK,QAASoV,EACTvW,UAAU,aACVC,MAAO,CAAEC,MAAO,SALlB,cAME,qBAAKF,UAA0B,YAAfmL,EAAA,oBAAiD,mBAAjE,SAAqF,cAAC3H,EAAA,EAAD,CAAM5B,KAAK,cAElG,eAACqD,EAAA,EAAKC,KAAN,CACEtD,KAAK,QACLyD,OAAuB,UAAf8F,EACRhK,QAASoV,EACTvW,UAAU,aACVC,MAAO,CAAEC,MAAO,SALlB,cAME,qBAAKF,UAA0B,YAAfmL,EAAA,oBAAiD,mBAAjE,SACE,cAAC3H,EAAA,EAAD,CAAM5B,KAAK,6BAMrB,sBAAK5B,UAAU,YAAYC,MAAO,CAAEmH,gBAAiBuD,GAArD,UACE,qBAAK3K,UAAU,iBAAf,SACE,cAAC,EAAD,CACEW,SAAUA,EACVsD,YAAaA,EACbyG,aAAcA,GAAgBA,EAC9BS,WAAYA,MAGhB,qBAAKnL,UAAU,mBAAf,SACE,cAAC,GAAD,CACEiE,YAAaA,EACbtD,SAAUA,EACV5D,iBAAkB4X,MAGtB,qBAAK3U,UAAU,eAAf,UACI2U,GAAkB,cAAC+B,EAAA,EAAD,CAClBtR,SAAS,eACTb,GAAG,QACHoS,QAAM,EACNnW,QAAS,cAACgD,EAAA,EAAD,CAAM5B,KAAK,cAAc5B,UAAU,eAC5CgL,QACE,cAAC,GAAD,CACEvO,QAASwH,EACT0Q,eAAgBA,EAChBT,UAAWA,mBCxHhB,OAA0B,qC,mBC6E1B0C,I,OArEG,WAAO,IAAD,EAEQhZ,mBAAS,IAFjB,mBAEb+O,EAFa,KAELkK,EAFK,OAGMjZ,mBAAS,IAHf,mBAGbkZ,EAHa,KAGNC,EAHM,OAIYnZ,mBAAS,IAJrB,mBAIboZ,EAJa,KAIHC,EAJG,OAKUrZ,oBAAS,GALnB,mBAKb6O,EALa,KAKJC,EALI,KAkCpB,OACI,sBAAK1M,UAAU,YAAf,UAEQ2M,EAAS,cAAC,KAAD,CAAShE,OAAK,EAAC1I,MAAO,CAAE6C,MAAO,QAASC,OAAQ,QAAhD,SAA2D,wCAAW4J,OAAyB,GAG5G,eAAClF,EAAA,EAAD,CAAMC,SA9BK,SAAC5F,GAChBA,EAAMiF,iBACF+P,GAASE,GACTtK,GAAW,GACX1P,EACK0B,OACAwY,2BAA2BJ,EAAOE,GAClC3X,MAAK,WACFqN,GAAW,GACXmK,EAAU,OAEbvX,OAAM,SAACC,GACJC,QAAQC,IAAIF,GACZsX,EAAUtX,EAAIgN,SACdG,GAAW,OAInBmK,EAAU,mBAYV,UACI,cAACpP,EAAA,EAAKhG,MAAN,CACIC,OAAK,EACLE,KAAK,QACL2I,KAAK,OACL4M,aAAa,OACbxV,MAAM,QACNjF,KAAK,QACLmF,SAAU,SAACC,GAAD,OAAWiV,EAASjV,EAAME,OAAO4F,QAAQA,MAAOkP,EAC1D9W,UAAW2M,EAAO2H,cAAc7I,SAAS,SAAW,yBAA2B,qBAEnF,cAAChE,EAAA,EAAKhG,MAAN,CACIC,OAAK,EACLE,KAAK,WACL2I,KAAK,OACL4M,aAAa,OACbxV,MAAM,WACNjF,KAAK,WACLmF,SAAU,SAACC,GAAD,OAAWmV,EAAYnV,EAAME,OAAO4F,QAAQA,MAAOoP,EAC7DhX,UAAW2M,EAAO2H,cAAc7I,SAAS,YAAc,yBAA2B,qBAEtF,wBAAQvK,SAAUuL,EAASzM,UAAWyM,EAAU,4BAA8B,qBAAsB/P,KAAK,SAAzG,uBAEJ,sBAAKsD,UAAU,kBAAf,mCAAuD,cAAC,IAAD,CAAMoX,GAAG,YAAT,gCChDpDC,GAfD,WACV,OACI,qBAAKrX,UAAU,iBAAf,SACI,sBAAKA,UAAU,QAAf,UACI,sBAAKA,UAAU,gBAAf,UACI,oBAAIA,UAAU,yBAAd,0BACA,qBAAKA,UAAU,sBAAf,SAAqC,cAAC,GAAD,SAGzC,qBAAKU,IAAK4W,GAASC,IAAI,SAASvX,UAAU,uBCjB3C,I,OAAA,IAA0B,oC,qBC2I1BwX,I,OArIM,WAAO,IAAD,EAEK5Z,mBAAS,IAFd,mBAEhB+O,EAFgB,KAERkK,EAFQ,OAGSjZ,mBAAS,IAHlB,mBAGhB6Z,EAHgB,KAGNC,EAHM,OAIG9Z,mBAAS,IAJZ,mBAIhBkZ,EAJgB,KAITC,EAJS,OAKSnZ,mBAAS,IALlB,mBAKhBoZ,EALgB,KAKNC,EALM,OAMuBrZ,mBAAS,IANhC,mBAMhB+Z,EANgB,KAMCC,EAND,OAOOha,oBAAS,GAPhB,mBAOhB6O,EAPgB,KAOPC,EAPO,OAQJ9O,mBAASZ,EAAS6B,WAAWL,IAAI,UAA7CM,EARgB,oBAoEvB,OACI,sBAAKkB,UAAU,eAAf,UAEQ2M,EAAS,cAAC,KAAD,CAAShE,OAAK,EAAC3I,UAAU,sBAAzB,SAAgD,4CAAe2M,OAAyB,GAIrG,oBAAI3M,UAAU,wBAAd,sBACA,eAACyH,EAAA,EAAD,CAAMC,SA1CK,SAAC5F,GAChBA,EAAMiF,kBArBD0Q,GAAaX,GAAUE,GAAaW,IAIhCX,EAASpQ,OAAS,GAAK+Q,EAAgB/Q,OAAS,KACjDoQ,IAAaW,GACbd,EAAU,uBACH,IAGPA,EAAU,qCACH,KAVXA,EAAU,uBACH,MAqBPnK,GAAW,GACX1P,EACK0B,OACAmZ,+BAA+Bf,EAAOE,GACtC3X,MAAK,SAAAyY,GACFjB,EAAU,IACViB,EAAYtS,KAAKrG,cAAc,CAC3B2B,YAAa2W,EACbrY,SAAS,8BAAD,OAAgC2Y,KAAID,EAAYtS,KAAKsR,OAArD,kBAEPzX,MAAK,WACFP,EAASY,MAAMoY,EAAYtS,KAAK7F,KAAK8I,IAAI,CACrC7G,KAAMkW,EAAYtS,KAAK1E,YACvBjB,OAAQiY,EAAYtS,KAAKpG,WAE7BsN,GAAW,MAEdpN,OAAM,SAACC,GACJC,QAAQC,IAAIF,GACZmN,GAAW,GACXmK,EAAUtX,EAAIgN,eAGzBjN,OAAM,SAAAC,GACHsX,EAAUtX,EAAIgN,SACdG,GAAW,QAcnB,UACI,eAACjF,EAAA,EAAKgN,MAAN,WACI,cAAChN,EAAA,EAAKhG,MAAN,CACIC,OAAK,EACL4C,GAAG,+CACH3C,MAAM,WACN3B,UAAU,uBACVuK,KAAK,OACL4M,aAAa,OACbza,KAAK,OACLmF,SAAU,SAACC,GAAD,OAAW4V,EAAY5V,EAAME,OAAO4F,QAC9CA,MAAO6P,IAEX,cAAChQ,EAAA,EAAKhG,MAAN,CACIC,OAAK,EACL4C,GAAG,8CACH3C,MAAM,QACN4I,KAAK,OACL4M,aAAa,OACbza,KAAK,QACLmF,SAAU,SAACC,GAAD,OAAWiV,EAASjV,EAAME,OAAO4F,QAC3CA,MAAOkP,EAEP9W,UAAW2M,EAAO2H,cAAc7I,SAAS,SAAW,8BAAgC,6BAG5F,cAAChE,EAAA,EAAKhG,MAAN,CACIC,OAAK,EACLE,KAAK,WACL2I,KAAK,OACL4M,aAAa,OACbxV,MAAM,WACNjF,KAAK,WACLmF,SAAU,SAACC,GAAD,OAAWmV,EAAYnV,EAAME,OAAO4F,QAC9CA,MAAOoP,EACPhX,UAAW2M,EAAO2H,cAAc7I,SAAS,YAAc,6BAA+B,0BAE1F,cAAChE,EAAA,EAAKhG,MAAN,CACIC,OAAK,EACLE,KAAK,WACL2I,KAAK,SACL4M,aAAa,OACbxV,MAAM,mBACNjF,KAAK,WACLmF,SAAU,SAACC,GAAD,OAAW8V,EAAmB9V,EAAME,OAAO4F,QACrDA,MAAO+P,EACP3X,UAAW2M,EAAO2H,cAAc7I,SAAS,uBAAyB,6BAA+B,yBAErG,cAAChE,EAAA,EAAKuQ,SAAN,CAAeC,UAAQ,EAACtW,MAAM,wCAC9B,yBAAQjF,KAAK,SAASwE,SAAUuL,EAASzM,UAAWyM,EAAU,+BAAiC,uBAA/F,UAAwH,cAACjJ,EAAA,EAAD,CAAM5B,KAAK,gBAAnI,UAEJ,sBAAK5B,UAAU,qBAAf,4BAAmD,cAAC,IAAD,CAAMoX,GAAG,SAAT,6BCjHhDc,GAdE,WACb,OACI,qBAAKlY,UAAU,YAAf,SACI,sBAAKA,UAAU,WAAf,UACI,qBAAKA,UAAU,mBAAf,SACI,qBAAKA,UAAU,yBAAf,SAAwC,cAAC,GAAD,QAG5C,qBAAKU,IAAKyX,GAAWZ,IAAI,SAASvX,UAAU,0BCZtDoY,GAAmB,CACrBzZ,YAAa,KACb0Z,WAAW,GAGTC,GAAsB,CACxBzb,eAAgB,KAChBE,kBAAkB,EAClBmX,UAAW,MAGTqE,GAAgB,CAClB7N,aAAc,UACdC,eAAgB,WAkEL6N,GANKC,YAAgB,CAChCjT,KAxDiB,WAAuC,IAAtC6Q,EAAqC,uDAA7B+B,GAAkBM,EAAW,uCACvD,OAAQA,EAAOhc,MACX,KAAKC,EACD,MAAO,CACHgC,YAAa+Z,EAAO9b,QAAQ+B,YAC5B0Z,WAAW,GAEnB,KAAK1b,EACD,OAAO,2BACA0Z,GADP,IAEIgC,WAAW,IAEnB,QACI,OAAOhC,IA4Cf5Z,QAxCoB,WAA0C,IAAzC4Z,EAAwC,uDAAhCiC,GAAqBI,EAAW,uCAC7D,OAAQA,EAAOhc,MACX,KAAKC,EACD,OAAO,2BACA0Z,GADP,IAEIxZ,eAAgB6b,EAAO9b,QAAQC,iBAEvC,KAAKF,EACD,OAAO,2BACA0Z,GADP,IAEItZ,iBAAkB2b,EAAO9b,QAAQG,mBAEzC,KAAKJ,EACD,OAAO,2BACA0Z,GADP,IAEInC,UAAWwE,EAAO9b,QAAQsX,YAElC,QACI,OAAOmC,IAuBfhM,OAnBmB,WAAoC,IAAnCgM,EAAkC,uDAA1BkC,GAAeG,EAAW,uCACtD,OAAQA,EAAOhc,MACX,KAAKC,EACD,MAAO,CACH+N,aAAcgO,EAAO9b,QAAQ8N,aAC7BC,eAAgB+N,EAAO9b,QAAQ+N,gBAGvC,QACI,OAAO0L,MChDbsC,I,OAAQC,YAAYJ,KACpBK,GAAO,WACT,IAAIC,EAAUC,cACR1S,EAAWC,cACb+R,EAAYjC,aAAY,SAAAC,GAAK,OAAIA,EAAM7Q,KAAK6S,aAchD,OAbAhU,qBAAU,WACNrH,IAAS0B,OAAOsa,oBAAmB,SAAAxT,GAC3BA,GACAa,E5BvBO,SAAAb,GACnB,MAAO,CACH9I,KAAMC,EACNC,QAAS,CACL+B,YAAa6G,I4BmBAyT,CAAQzT,IACjBsT,EAAQtS,KAAK,OAGbsS,EAAQtS,KAAK,UACbH,E5BlBL,CACH3J,KAAMC,U4BoBP,CAAC0J,EAAUyS,IAEPT,EAAY,cAAC,GAAD,IAEf,eAAC,IAAD,WACI,cAAC,IAAD,CAAOa,OAAK,EAACC,KAAK,IAAIC,UAAWrD,KACjC,cAAC,IAAD,CAAOoD,KAAK,SAASC,UAAW/B,KAChC,cAAC,IAAD,CAAO8B,KAAK,YAAYC,UAAWlB,SAMlCmB,GAAa,SAAC1b,GACvB,OACI,cAAC,IAAD,CAAUgb,MAAOA,GAAjB,SACI,cAAC,IAAD,CAAQW,SAAS,eAAjB,SACK3b,EAAM4b,cAQvBC,IAASC,OAAO,cAAC,GAAD,UAAY,cAAC,GAAD,MAAuBC,SAASC,eAAe,W","file":"static/js/main.2c8e7398.chunk.js","sourcesContent":["// User Action Types\nexport const SET_USER = 'SET_USER';\nexport const CLEAR_USER = 'CLEAR_USER';\n\n\n// Channel Action Types\n\nexport const SET_CURRENT_CHANNEL = 'SET_CURRENT_CHANNEL';\n\nexport const SET_PRIVATE_CHANNEL = 'SET_PRIVATE_CHANNEL';\n\nexport const SET_USER_POSTS = \"SET_USER_POSTS\";\n\n//colors Action Type\n\nexport const SET_COLORS = \"SET_COLORS\";","import * as actionTypes from './types';\n\n\n//user actions\n\nexport const setUser = user => {\n    return {\n        type: actionTypes.SET_USER,\n        payload: {\n            currentUser: user\n        }\n    }\n}\n\nexport const clearUser = () => {\n    return {\n        type: actionTypes.CLEAR_USER\n    }\n}\n\n//channel actions\n\nexport const setCurrentChannel = channel => {\n    return {\n        type: actionTypes.SET_CURRENT_CHANNEL,\n        payload: {\n            currentChannel: channel\n        }\n    }\n}\n\n\nexport const setPrivateChannel = isPrivateChannel => {\n    return {\n        type: actionTypes.SET_PRIVATE_CHANNEL,\n        payload: {\n            isPrivateChannel\n        }\n    }\n}\n\nexport const setUserPosts = userPosts => {\n    return {\n        type: actionTypes.SET_USER_POSTS,\n        payload: {\n            userPosts\n        }\n    }\n}\n\n\n//colors actions\n\nexport const setColors = (primaryColor, secondaryColor) => {\n    return {\n        type: actionTypes.SET_COLORS,\n        payload: {\n            primaryColor,\n            secondaryColor\n        }\n    }\n}","import firebase from 'firebase/app';\nimport \"firebase/auth\";\nimport 'firebase/database';\nimport \"firebase/storage\";\nimport 'firebase/analytics'\nimport 'firebase/firestore'\n\nvar firebaseConfig = {\n    apiKey: \"AIzaSyAi_kKOFMaDKqTamyIVqLGNgJ2N9560KCQ\",\n    authDomain: \"fun-chart.firebaseapp.com\",\n    projectId: \"fun-chart\",\n    storageBucket: \"fun-chart.appspot.com\",\n    messagingSenderId: \"463831305572\",\n    appId: \"1:463831305572:web:8797960980effe8150fe71\",\n    measurementId: \"G-ETT46STVL5\"\n};\n// Initialize Firebase\nfirebase.initializeApp(firebaseConfig);\nfirebase.analytics();\n\nexport default firebase;","import React, { useState, useRef } from 'react'\nimport { Button, Dropdown, Grid, Header, Icon, Image, Input, Modal } from 'semantic-ui-react'\nimport AvatarEditor from 'react-avatar-editor'\nimport './UserPanel.scss'\n\nimport firebase from '../../../firebase'\n\nconst UserPanel = (props) => {\n\n    const [modal, setModal] = useState(false)\n    const [previewImage, setPreviewImage] = useState(\"\")\n    const [croppedImage, setCroppedImage] = useState(\"\")\n    const [blob, setblob] = useState(\"\")\n    const avatarEditorRef = useRef(null);\n    const [storageRef] = useState(firebase.storage().ref())\n    const [userRef] = useState(firebase.auth().currentUser)\n    const [usersRef] = useState(firebase.database().ref('users'))\n    const [metaData] = useState({ contentType: 'image/jpeg' })\n    const handleFileChange = (event) => {\n        const file = event.target.files[0];\n        const reader = new FileReader();\n        if (file) {\n            reader.readAsDataURL(file);\n            reader.addEventListener('load', () => {\n                setPreviewImage(reader.result);\n            })\n        }\n    }\n\n    const handleCropImage = () => {\n        if (avatarEditorRef.current) {\n            avatarEditorRef.current.getImageScaledToCanvas().toBlob(blob => {\n                let imageURL = URL.createObjectURL(blob);\n                setCroppedImage(imageURL);\n                setblob(blob);\n            })\n        }\n    }\n\n    const uploadCroppedImage = () => {\n        storageRef\n            .child(`avatars/user/${userRef.uid}`)\n            .put(blob, metaData)\n            .then(snap => {\n                snap.ref.getDownloadURL().then(downloadURL => {\n                    changeAvatar(downloadURL)\n                })\n            })\n    }\n\n    const changeAvatar = (downloadURL) => {\n        userRef\n            .updateProfile({\n                photoURL: downloadURL\n            })\n            .then(() => {\n                setModal(false)\n            })\n            .catch(err => {\n                console.log(err);\n            })\n\n        usersRef\n            .child(userRef.uid)\n            .update({\n                avatar: downloadURL\n            })\n            .then(() => {\n            })\n            .catch(err => {\n                console.log(err);\n            })\n    }\n\n    const dropdownOptions = () => [\n        {\n            key: \"signin\",\n            text: <span>Signed in as <strong>{props.currUser.displayName}</strong></span>,\n            disabled: true\n        },\n        {\n            key: \"avatar\",\n            text: <span onClick={() => setModal(true)}>Change Avatar</span>,\n        },\n        {\n            key: \"signout\",\n            text: <span onClick={signOut}>Sign Out</span>\n        }\n    ]\n\n    const signOut = () => {\n        firebase\n            .auth()\n            .signOut()\n            .then()\n    }\n    return (\n\n        <React.Fragment>\n            <div className=\"userPanel\" style={{ color: 'black' }}>\n                <Header as=\"h4\" inverted className=\"userPanel__userName\" style={{ color: 'black', padding: '2.5rem ' }}>\n                    <div className=\"userPanel__float\">\n                        <Dropdown trigger={\n                            <span >\n                                <Image src={props.currUser.photoURL} spaced=\"right\" avatar style={{ marginRight: '20px' }} />\n                                {props.currUser.displayName}\n                            </span>\n                        } options={\n                            dropdownOptions()\n                        }\n                            className=\"menu-modal\"\n                        />\n                    </div>\n                </Header>\n            </div>\n\n            {/* Change Avatar Modal */}\n            <Modal basic open={modal} onClose={() => setModal(false)}>\n                <Modal.Header>Change Avatar</Modal.Header>\n                <Modal.Content>\n                    <Input\n                        fluid\n                        type=\"file\"\n                        label=\"New Avatar\"\n                        name=\"previewImage\"\n                        onChange={handleFileChange}\n\n                    />\n                    <Grid centered stackable columns={2}>\n                        <Grid.Row centered>\n                            <Grid.Column className=\"ui center aligned grid\">\n                                {previewImage && (\n                                    <AvatarEditor\n                                        image={previewImage}\n                                        width={120}\n                                        height={120}\n                                        border={50}\n                                        scale={1.2}\n                                        ref={avatarEditorRef}\n                                    />\n                                )}\n                            </Grid.Column>\n                            <Grid.Column>\n                                {croppedImage && (\n                                    <Image\n                                        style={{ margin: '3.5em auto' }}\n                                        width={100}\n                                        height={100}\n                                        src={croppedImage}\n                                    />\n                                )}\n                            </Grid.Column>\n                        </Grid.Row>\n                    </Grid>\n                </Modal.Content>\n                <Modal.Actions>\n                    {croppedImage &&\n                        <Button\n                            color=\"green\"\n                            inverted\n                            onClick={uploadCroppedImage}\n                        >\n\n                            <Icon name=\"save\" />\n                           Change Avatar\n                        </Button>}\n                    <Button\n                        color=\"green\"\n                        inverted\n                        onClick={handleCropImage}\n                    >\n                        <Icon name=\"image\" />\n                           Preview\n                        </Button>\n                    <Button\n                        color=\"red\" inverted onClick={() => setModal(false)}>\n                        <Icon name=\"remove\"\n                        />\n                            Cancel\n                        </Button>\n\n                </Modal.Actions>\n            </Modal>\n        </React.Fragment>\n    )\n}\n\nexport default UserPanel\n","import React, { useEffect, useState } from 'react'\nimport { Label, Menu } from 'semantic-ui-react'\n\n\nimport firebase from '../../../../firebase'\n\nimport './ChannelItemList.scss'\n\nconst ChannelItemList = ({ channel, changeChannel, currChannel }) => {\n    const [messagesRef] = useState(firebase.database().ref('messages'))\n    const [notification, setNotification] = useState(null)\n\n    useEffect(() => {\n        if (channel && currChannel) {\n            messagesRef.child(channel.id).on('value', snap => {\n                handleNotification(channel.id, snap);\n            });\n        }\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [channel, currChannel])\n\n    useEffect(() => {\n        return () => {\n            messagesRef.child(channel.id).off();\n            clearNotification();\n        }\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [])\n\n    const handleNotification = (channelId, snap) => {\n        if (notification) {\n            const lastTotal = notification.total || 0;\n\n            if (snap.numChildren() - lastTotal > 0) {\n                notification.count = snap.numChildren() - lastTotal;\n            }\n            notification.lastKnownTotal = snap.numChildren();\n            setNotification({ ...notification })\n        } else {\n            setNotification({\n                id: channelId,\n                total: snap.numChildren(),\n                lastKnownTotal: snap.numChildren(),\n                count: 0\n            });\n        }\n    }\n\n    const clearNotification = () => setNotification(null);\n\n    return (\n\n        <Menu.Item\n            key={channel.id}\n            onClick={() => { changeChannel(channel); clearNotification() }}\n            name={channel.name}\n            style={{ opacity: 0.7, position: 'relative' }}\n            active={channel?.id === currChannel?.id}\n        >\n\n            <div className=\"starred__channel channel__channelName\"> {channel.name}</div>\n            {notification && !!notification.count && (\n                <Label color=\"red\" className=\"channel__notification\">{notification.count}</Label>\n            )}\n        </Menu.Item>\n    )\n}\n\nexport default ChannelItemList\n","import React, { useState, useEffect } from 'react'\nimport { Button, Form, Icon, Input, Menu, Modal } from 'semantic-ui-react'\n\nimport { useDispatch } from 'react-redux'\nimport { setCurrentChannel, setPrivateChannel } from '../../../action'\n\nimport firebase from '../../../firebase'\nimport ChannelItemList from './channelItem/ChannelItemList'\n\nconst Channels = ({ user, currChannelState }) => {\n    const [channels, setChannels] = useState([])\n    const [currChannel, setCurrChannel] = useState(null)\n    const [modal, setModal] = useState(false)\n    const [channelName, setChannelName] = useState(\"\")\n    const [channelDetails, setChannelDetails] = useState(\"\")\n    const [channelRef] = useState(firebase.database().ref('channels'))\n    const [messagesRef] = useState(firebase.database().ref('messages'))\n    const [firstLoad, setFirstLoad] = useState(true)\n    const [typingRef] = useState(firebase.database().ref('typing'))\n    const dispatch = useDispatch();\n    var prevChannel = currChannel;\n\n    useEffect(() => {\n        var channels = []\n\n        channelRef.on('child_added', snap => {\n            channels.push(snap.val())\n            setChannels(channels);\n        })\n    }, [channelRef])\n\n    useEffect(() => {\n        return () => {\n            channelRef.off();\n            channels.forEach(channel => {\n                messagesRef.child(channel.id).off();\n            })\n        }\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [])\n\n\n    useEffect(() => {\n        const firstChannel = channels[0];\n        if (firstLoad && channels.length > 0) {\n            dispatch(setCurrentChannel(firstChannel))\n            setFirstLoad(false)\n            setCurrChannel(firstChannel)\n        }\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [channels, firstLoad])\n\n\n\n\n    const displayChannels = () => {\n\n        return (\n            channels.length > 0 &&\n            channels.map((channel) => (\n                <ChannelItemList channel={channel} changeChannel={changeChannel} currChannel={currChannelState} key={channel.id} />\n            ))\n        );\n    }\n\n\n    const changeChannel = (channel) => {\n        dispatch(setCurrentChannel(channel));\n        dispatch(setPrivateChannel(false));\n        setCurrChannel(channel)\n        typingRef\n            .child(prevChannel.id)\n            .child(user.uid)\n            .remove()\n    }\n\n\n    const addChannel = () => {\n        const key = channelRef.push().key;\n        const newChannel = {\n            id: key,\n            name: channelName,\n            details: channelDetails,\n            createdBy: {\n                name: user.displayName,\n                avatar: user.photoURL\n            }\n        }\n        channelRef\n            .child(key)\n            .update(newChannel)\n            .then(() => {\n                setChannelName(\"\");\n                setChannelDetails(\"\");\n                setModal(false)\n            })\n            .catch(err => {\n                console.log(err);\n            })\n    }\n\n\n\n    const formSubmit = (event) => {\n        event.preventDefault();\n        if (channelName.length > 0 && channelName.length < 21 && channelDetails) {\n            addChannel();\n        }\n    }\n    return (\n        <React.Fragment>\n            <Menu.Menu className=\"starred\">\n                <Menu.Item style={{ backgroundColor: 'white', paddingBottom: '2rem' }}>\n                    <span className=\"starred__heading\">\n                        <Icon name=\"exchange\" />CHANNELS\n                </span>{\"   \"}\n                ({channels.length})<Icon name=\"add\" onClick={() => setModal(true)} style={{ paddingLeft: '8rem' }} />\n                </Menu.Item>\n                {displayChannels()}\n            </Menu.Menu>\n\n            {/* //add channel modal */}\n            <Modal basic\n                open={modal}\n                onClose={() => setModal(false)}\n            >\n                <Modal.Header style={{ fontSize: '3.5rem' }}>Add a Channel <span style={{ fontSize: '1.5rem' }}> (channel Name must be less than 20 charater)</span></Modal.Header>\n                <Modal.Content>\n                    <Form onSubmit={(event) => formSubmit(event)}>\n                        <Form.Field>\n                            <Input\n                                fluid\n                                label=\"Name of Channel\"\n                                name=\"channelName\"\n                                onChange={(event) => setChannelName(event.target.value)}\n                                placeholder={'Maximum 20 characters allowed'}\n\n                            />\n                        </Form.Field>\n                        <Form.Field>\n                            <Input\n                                fluid\n                                label=\"About the Channel\"\n                                name=\"channelDetails\"\n                                onChange={(event) => setChannelDetails(event.target.value)}\n                                placeholder={'Shot info'}\n                            />\n                        </Form.Field>\n                    </Form>\n                </Modal.Content>\n\n                <Modal.Actions>\n                    <Button color=\"green\" inverted onClick={(event) => formSubmit(event)}>\n                        <Icon name=\"checkmark\" /> Add\n                    </Button>\n                    <Button color=\"red\" inverted onClick={() => setModal(false)}>\n                        <Icon name=\"remove\" /> Cancel\n                    </Button>\n                </Modal.Actions>\n            </Modal>\n\n        </React.Fragment >\n    )\n}\n\nexport default Channels\n","import React, { useState, useEffect } from 'react'\nimport firebase from '../../../firebase'\nimport { Icon, Menu } from 'semantic-ui-react'\nimport { useDispatch } from 'react-redux'\nimport { setCurrentChannel, setPrivateChannel } from '../../../action'\nimport './DirectMessages.scss'\nconst DirectMessages = ({ user }) => {\n    const dispatch = useDispatch();\n    const [activeChannel, setActiveChannel] = useState(\"\")\n    const [users, setUsers] = useState([])\n    const [usersRef] = useState(firebase.database().ref('users'))\n    const [connectedRef] = useState(firebase.database().ref('.info/connected'))\n    const [presenceRef] = useState(firebase.database().ref('presence'))\n    useEffect(() => {\n        if (user) {\n            addListeners(user.uid)\n        }\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, []);\n\n    useEffect(() => {\n        return () => {\n            usersRef.off()\n            presenceRef.off()\n            connectedRef.off()\n        }\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [])\n\n\n    const addListeners = (currUserId) => {\n        usersRef.on('child_added', snap => {\n            if (currUserId !== snap.key) {\n                let user = snap.val();\n                user['uid'] = snap.key;\n                user['status'] = 'offline';\n                setUsers(users => {\n                    if (users && !users.some(existingUser => existingUser.uid === user.uid)) {\n                        return [...users, user]\n                    }\n\n                    return [...users]\n                });\n            }\n        })\n\n        connectedRef.on('value', snap => {\n            if (snap.val() === true) {\n                const ref = presenceRef.child(currUserId);\n                ref.set(true);\n                ref.onDisconnect().remove(err => {\n                    if (err !== null) {\n                        console.error(err);\n                    }\n                })\n            }\n        })\n        presenceRef.on('child_added', snap => {\n            if (currUserId !== snap.key) {\n                addStatusToUser(snap.key);\n            }\n        })\n        presenceRef.on('child_removed', snap => {\n            if (currUserId !== snap.key) {\n                addStatusToUser(snap.key, false);\n            }\n        })\n    }\n\n    const changeChannel = (user) => {\n        const channelId = getChannelId(user.uid);\n        const channelData = {\n            id: channelId,\n            name: user.name\n        };\n        dispatch(setCurrentChannel(channelData));\n        dispatch(setPrivateChannel(true));\n        setActiveChannel(user.uid);\n    }\n\n    const getChannelId = (userId) => {\n        const currentUserId = user.uid;\n        return userId < currentUserId ? `${userId}/${currentUserId}` : `${currentUserId}/${userId}`;\n    }\n\n    //t\n    const addStatusToUser = (userId, connected = true) => {\n        setUsers(prevUsers => {\n            prevUsers && prevUsers.forEach(user => {\n                if (user.uid === userId) {\n                    user['status'] = `${connected ? 'online' : 'offline'}`\n                }\n            });\n            return [...prevUsers];\n        })\n\n\n        //t\n    }\n    const isUserOnline = (user) => user.status === 'online';\n\n    return (\n        <div className=\"directMessage\">\n            <Menu.Menu className=\"directMessage__heading\">\n                <Menu.Item>\n                    <span >\n                        <Icon name=\"mail\" />DIRECT MESSAGES\n                    </span>{' '}\n                     ({users && users.length})\n                </Menu.Item>\n            </Menu.Menu>\n            { users && users.map(user => {\n                return (\n                    <Menu.Item\n                        key={user.uid}\n                        active={user.uid === activeChannel}\n                        onClick={() => changeChannel(user)}\n                        style={{ opacity: 0.7, fontStyle: 'italic' }}\n                        className=\"directMessage__channel\"\n                    >\n                        <Icon\n                            name=\"circle\"\n                            style={{ height: '2rem', width: '2rem' }}\n                            color={isUserOnline(user) ? 'green' : 'red'}\n\n                        />\n                  @{user.name}\n                    </Menu.Item>\n                )\n            })}\n        </div >\n    )\n}\n\nexport default DirectMessages\n","import React, { useState, useEffect } from 'react'\nimport { Menu, Icon } from 'semantic-ui-react'\nimport { useDispatch } from 'react-redux'\nimport { setCurrentChannel, setPrivateChannel } from '../../../action'\nimport firebase from '../../../firebase'\nimport './Starred.scss'\n\nconst Starred = ({ user }) => {\n    const dispatch = useDispatch();\n    const [userRef] = useState(firebase.database().ref('users'))\n    const [starredChannels, setStarredChannels] = useState([])\n    const [activeChannel, setActiveChannel] = useState('')\n\n    useEffect(() => {\n\n        if (user) {\n            addListeners(user.uid)\n        }\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [user])\n\n    useEffect(() => {\n        return () => {\n            userRef.child(`${user.uid}/starred`).off();\n        }\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [])\n\n    const addListeners = (id) => {\n        var channels = []\n        userRef\n            .child(id)\n            .child('starred')\n            .on('child_added', snap => {\n                const starredChannel = { id: snap.key, ...snap.val() };\n                channels.push(starredChannel);\n                setStarredChannels([...channels])\n            })\n\n        userRef\n            .child(id)\n            .child('starred')\n            .on('child_removed', snap => {\n                const channelToRemove = { id: snap.key, ...snap.val() };\n                const filterChannels = channels.filter(channel => {\n                    return channel.id !== channelToRemove.id;\n                })\n                channels = filterChannels\n                setStarredChannels(filterChannels)\n            })\n    }\n\n\n    const displayChannels = () => (\n        starredChannels.length > 0 &&\n        starredChannels.map(channel => (\n            <Menu.Item\n                key={channel.id}\n                onClick={() => changeChannel(channel)}\n                name={channel.name}\n                style={{ opacity: 0.7 }}\n                active={channel.id === activeChannel.id}\n            >\n                <div className=\"starred__channel\"> {channel.name}</div>\n\n            </Menu.Item>\n        ))\n    )\n\n    const changeChannel = (channel) => {\n        dispatch(setCurrentChannel(channel));\n        setActiveChannel(channel);\n        dispatch(setPrivateChannel(false));\n        // setChannel(channel)\n    }\n\n\n    return (\n        <React.Fragment>\n            <Menu.Menu className=\"starred\">\n                <Menu.Item style={{ backgroundColor: 'white', paddingBottom: '2rem' }}>\n                    <span className=\"starred__heading\">\n                        <Icon name=\"star\" />Favourite's\n                </span>{\"   \"}\n                    ({starredChannels.length})\n                </Menu.Item>\n                {displayChannels()}\n            </Menu.Menu>\n        </React.Fragment>\n    )\n}\n\nexport default Starred\n","import React, { useState, useEffect } from 'react'\nimport { Button, Divider, Icon, Label, Modal } from 'semantic-ui-react';\nimport { TwitterPicker } from 'react-color';\n\nimport { useDispatch } from 'react-redux'\nimport { setColors } from '../../action'\n\n\nimport firebase from '../../firebase'\n\nimport './ColorPanel.scss'\n\nconst ColorPanel = ({ user }) => {\n    const dispatch = useDispatch();\n    const [modal, setModal] = useState(false);\n    const [primary, setPrimary] = useState(\"\");\n    const [secondary, setSecondary] = useState(\"\");\n    const [usersRef] = useState(firebase.database().ref('users'))\n    const [userColors, setUserColors] = useState([]);\n    useEffect(() => {\n        if (user) {\n            let userColors = [];\n            usersRef\n                .child(`${user.uid}/colors`)\n                .on('child_added', snap => {\n                    userColors.unshift(snap.val());\n                    setUserColors(userColors)\n                })\n        }\n    }, [user, usersRef])\n\n    useEffect(() => {\n        return () => {\n            usersRef\n                .child(`${user.uid}/colors`)\n                .off();\n        }\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [])\n\n\n\n    const displayUsersColors = (colors) => (\n        colors.length > 0 && colors.map((color, i) => (\n            <React.Fragment key={i}>\n                <div className=\"color__container\" onClick={() => dispatch(setColors(color.primary, color.secondary))}>\n                    <div className=\"color__square\" style={{ background: color.primary }}>\n                        <div className=\"color__overlay\" style={{ background: color.secondary }}></div>\n                    </div>\n                </div>\n\n            </React.Fragment>\n        ))\n    )\n\n\n    const handleSaveColor = () => {\n        if (primary && secondary) {\n            usersRef\n                .child(`${user.uid}/colors`)\n                .push()\n                .update({\n                    primary,\n                    secondary\n                })\n                .then(() => {\n                    setModal(false);\n                })\n                .catch(err => {\n                    console.log(err);\n                })\n        }\n    }\n\n\n\n    return (\n        <React.Fragment>\n\n            <Divider />\n            <div className=\"colorPanel\">\n                <Button icon=\"add\" size=\"small\" color=\"blue\" onClick={() => setModal(true)} className=\"colorPanel__add\" />\n                {displayUsersColors(userColors)}\n\n            </div>\n\n            {/* color Picker Modal */}\n            <Modal\n                basic\n                open={modal}\n                onClose={() => setModal(false)}\n                className=\"colorPanel__modal\"\n                style={{ display: 'flex', alignItems: 'center', justifyContent: 'center' }}\n            >\n                <div className=\"colorPanel__modal\">\n                    <Modal.Header className=\"colorPanel__modal--heading\">Choose App Colors</Modal.Header>\n                    <Modal.Content className=\"colorPanel__modal--panel\">\n                        <div className=\"colorPanel__modal--panelArea-1\">\n                            <Label content=\"SidePanel Color\"\n                                className=\"colorPanel__modal--subHeading\"\n                            />\n                            <TwitterPicker\n                                onChange={(color) => setPrimary(color.hex)}\n                                color={primary}\n                                className=\"colorPanel__modal--panel-1\"\n                            />\n                        </div>\n                        <div className=\"colorPanel__modal--panelArea-2\">\n                            <Label content=\"Message Area Color\"\n                                className=\"colorPanel__modal--subHeading\"\n                            />\n                            <TwitterPicker\n                                onChange={(color) => setSecondary(color.hex)}\n                                color={secondary}\n                                className=\"colorPanel__modal--panel-2\"\n                            />\n                        </div>\n                    </Modal.Content>\n                    <Modal.Actions className=\"colorPanel__modal--buttons\">\n                        <Button\n                            color=\"green\" inverted\n                            onClick={handleSaveColor}\n                            className=\"colorPanel__modal--button-1\"\n                        >\n                            <Icon name=\"checkmark\" />\n                            Save Colors\n                        </Button>\n                        <Button\n                            color=\"red\"\n                            inverted\n                            onClick={() => setModal(false)}\n                            className=\"colorPanel__modal--button-2\"\n                        >\n                            <Icon name=\"remove\"\n                            />\n                            Cancel\n                        </Button>\n\n                    </Modal.Actions>\n                </div>\n            </Modal>\n        </React.Fragment >\n    )\n}\n\nexport default ColorPanel\n","import React from 'react'\nimport UserPanel from '../userPanel/UserPanel'\nimport Channels from '../channels/Channels'\nimport DirectMessages from '../directMessage/DirectMessages'\nimport Starred from '../starred/Starred'\nimport './/SidePanel.scss'\nimport ColorPanel from '../../colorPanel/ColorPanel'\nconst SidePanel = (props) => {\n\n    const displayPanel = () => {\n        if (props.activeItem === \"channel\") {\n            return (<Channels user={props.currUser} currChannelState={props.currChannel} />)\n        }\n        else if (props.activeItem === \"directMessage\") {\n            return (<DirectMessages user={props.currUser} />)\n        }\n        else if (props.activeItem === \"starred\") {\n            return (<Starred user={props.currUser} />)\n        }\n        else {\n            return (<ColorPanel user={props.currUser} />)\n        }\n    }\n\n    return (\n        <div>\n            <div className=\"sidePanel__user\">\n                <UserPanel currUser={props.currUser} primaryColor={props.primaryColor} />\n            </div>\n            <div className=\"sidePanel__channels\">\n                {displayPanel()}\n\n            </div>\n        </div>\n    )\n}\n\nexport default SidePanel\n","import React, { useState } from 'react'\nimport { Button, Icon, Input, Modal } from 'semantic-ui-react'\nimport mime from 'mime-types'\nconst FileModal = ({ modal, setModal, uploadFile }) => {\n    const [file, setFile] = useState(null)\n    const [authorized] = useState(['image/jpeg', 'image/png', 'image/jpg'])\n\n    const addFile = (event) => {\n        const file = event.target.files[0]\n        if (file) {\n            setFile(file)\n        }\n    }\n    const sentFile = () => {\n        if (file !== null) {\n            if (authorized.includes(mime.lookup(file.name))) {\n                const metadata = { contentType: mime.lookup(file.name) };\n                uploadFile(file, metadata)\n                setModal(false)\n                setFile(null)\n            }\n        }\n    }\n\n    return (\n        <React.Fragment>\n            <Modal basic open={modal} onClose={() => setModal(false)}>\n                <Modal.Header>Select an image file</Modal.Header>\n                <Modal.Content>\n                    <Input\n                        fluid\n                        label=\"File types:jpg ,png\"\n                        name=\"file\"\n                        type=\"file\"\n                        onChange={(event) => addFile(event)}\n                    />\n                </Modal.Content>\n                <Modal.Actions>\n                    <Button\n                        color=\"green\"\n                        inverted\n                        onClick={() => sentFile()}\n                    ><Icon name=\"checkmark\" />\n                    Sent\n                    </Button>\n                    <Button\n                        color=\"red\"\n                        inverted\n                        onClick={() => setModal(false)}\n                    ><Icon name=\"remove\" />\n                    Cancel\n                    </Button>\n                </Modal.Actions>\n            </Modal>\n        </React.Fragment>\n    )\n}\n\nexport default FileModal\n","import React from 'react'\nimport { Progress } from 'semantic-ui-react'\n\nconst ProgressBar = ({ uploadState, percentUploaded }) => (\n    uploadState === \"uploading\" && (\n        <Progress\n            className=\"progress__bar\"\n            percent={percentUploaded}\n            progress\n            indicating\n            size=\"medium\"\n            inverted\n\n        />\n    )\n)\n\nexport default ProgressBar\n","import React, { useState, useRef, useEffect } from 'react'\nimport { Button } from 'semantic-ui-react'\nimport { v4 as uuidv4 } from 'uuid';\nimport firebase from '../../../firebase'\nimport FileModal from '../FileModal'\nimport ProgressBar from '../ProgressBar';\nimport { Picker, emojiIndex } from 'emoji-mart';\nimport 'emoji-mart/css/emoji-mart.css';\nimport './MessageForm.scss'\n\nconst MessageForm = ({ user, channel, isPrivateChannel, getMessageRef }) => {\n    const [message, setMessage] = useState(\"\")\n    const [loading, setLoading] = useState(false)\n    const [errors, setErrors] = useState([])\n    const [modal, setModal] = useState(false)\n    const [uploadState, setUploadState] = useState(\"\")\n    const [storageRef] = useState(firebase.storage().ref())\n    const [typingRef] = useState(firebase.database().ref('typing'))\n    const [percentUploaded, setPercentUploaded] = useState(0)\n    const [emojiPicker, setEmojiPicker] = useState(false)\n\n    const messageInputRef = useRef(null);\n\n\n    useEffect(() => {\n        return () => {\n            typingRef.off()\n        }\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [])\n\n\n    const createMessage = (fileUrl = null) => {\n        const messageObj = {\n            timestamp: firebase.database.ServerValue.TIMESTAMP,\n            user: {\n                id: user.uid,\n                name: user.displayName,\n                avatar: user.photoURL\n            }\n        };\n        if (fileUrl !== null) {\n            messageObj['image'] = fileUrl;\n\n        } else {\n            messageObj['content'] = message;\n        }\n\n        return messageObj\n\n    }\n\n    const handleKeyDown = (event) => {\n        if (event.ctrlKey && event.keyCode === 13) {\n            sentMessage();\n        }\n        if (message) {\n            typingRef\n                .child(channel.id)\n                .child(user.uid)\n                .set(user.displayName)\n        }\n        else {\n            typingRef\n                .child(channel.id)\n                .child(user.uid)\n                .remove()\n        }\n    }\n\n\n\n\n    const sentMessage = () => {\n        if (message) {\n            setLoading(true)\n            getMessageRef()\n                .child(channel.id)\n                .push()\n                .set(createMessage())\n                .then(() => {\n                    setLoading(false)\n                    setMessage(\"\")\n                    setErrors([])\n                    typingRef\n                        .child(channel.id)\n                        .child(user.uid)\n                        .remove()\n                })\n                .catch(err => {\n                    console.log(err);\n                    setLoading(false)\n                    setErrors([err])\n                })\n        }\n        else {\n            var err = []\n            err.push(\"add a message\")\n            setErrors(err)\n            console.log(err);\n        }\n    }\n\n    const getPath = () => {\n        if (isPrivateChannel) {\n            return `chat/private/${channel.id}`;\n        } else {\n            return 'chat/public';\n        }\n    }\n\n    const handleAddEmoji = (emoji) => {\n        const oldMessage = message;\n        const newMessage = colonToUnicode(`${oldMessage} ${emoji.colons}`);\n        setMessage(newMessage)\n        setEmojiPicker(false);\n        setTimeout(() => messageInputRef.current.focus(), 0);\n    }\n\n\n\n    const colonToUnicode = message => {\n        return message.replace(/:[A-Za-z0-9_+-]+:/g, x => {\n            x = x.replace(/:/g, \"\");\n            let emoji = emojiIndex.emojis[x];\n            if (typeof emoji !== \"undefined\") {\n                let unicode = emoji.native;\n                if (typeof unicode !== \"undefined\") {\n                    return unicode;\n                }\n            }\n            x = \":\" + x + \":\";\n            return x;\n        });\n    };\n\n\n    const handleTogglePicker = () => {\n        var picker = !emojiPicker;\n        setEmojiPicker(picker)\n    }\n\n    const uploadFile = (file, metadata) => {\n        const pathToUpload = channel.id;\n        const ref = getMessageRef();\n        const filePath = `${getPath()}/${uuidv4()}.jpg`;\n        const uploadtemp = storageRef.child(filePath).put(file, metadata)\n        setUploadState(\"uploading\");\n\n        uploadtemp.on('state__changed', snap => {\n            const percentageUpload = Math.round((snap.bytesTransferred / snap.totalBytes) * 100);\n            setPercentUploaded(percentageUpload);\n        }, err => {\n            console.log(err);\n            setErrors(errs => [...errs, err]);\n            setUploadState('error');\n        });\n\n        uploadtemp.then(() => {\n            uploadtemp.snapshot.ref.getDownloadURL()\n                .then(downloadUrl => {\n                    sentFileMessage(downloadUrl, ref, pathToUpload);\n                })\n                .catch(err => {\n                    setErrors(errs => [...errs, err]);\n                    setUploadState('error');\n\n                });\n        });\n    }\n\n    const sentFileMessage = (downloadUrl, ref, pathToUpload) => {\n        ref.child(pathToUpload)\n            .push()\n            .set(createMessage(downloadUrl))\n            .then(() => {\n                setUploadState('done');\n            })\n            .catch(err => {\n                console.log(err);\n                setErrors(errs => [...errs, err])\n            })\n    }\n\n    return (\n        <React.Fragment>\n            <div className={errors.length > 0 && errors.map(error => error.includes('message')) ? 'error messageForm' : 'messageForm'}\n\n            >\n                {emojiPicker && (\n                    <Picker\n                        set=\"apple\"\n                        onSelect={handleAddEmoji}\n                        title=\"Pick your emoji\"\n                        emoji=\"point_up\"\n                        emojiTooltip='false'\n                        theme='auto'\n                        style={{ position: 'absolute', top: '-42rem', left: '24rem' }}\n                    />\n                )}\n                <Button\n                    className=\"messageForm__addFile\"\n                    disabled={uploadState === \"uploading\"}\n                    onClick={() => setModal(true)}\n                    icon=\"plus\"\n                    style={{ borderRadius: '2rem', padding: '1rem' }}\n                />\n                <Button\n                    icon={emojiPicker ? 'close' : 'smile outline'}\n                    onClick={() => handleTogglePicker()}\n                    className=\"messageForm__smile\"\n                />\n                <Button\n                    onClick={() => sentMessage()}\n                    disabled={loading}\n                    icon=\"send\"\n                    className=\"messageForm__replay\"\n                />\n                <form className=\"ui form\">\n                    <textarea\n                        ref={messageInputRef}\n                        name=\"message\"\n                        onChange={(event) => setMessage(event.target.value)}\n                        onKeyDown={handleKeyDown}\n                        rows=\"1\"\n                        placeholder=\"Type a Message Here..\"\n                        value={message}\n                        className={errors.length > 0 && errors.map(error => error.includes('message')) ? 'error messageForm__textarea' : 'messageForm__textarea'}\n                        style={{ borderRadius: '20px', width: '60rem', resize: 'none' }}\n                    ></textarea>\n                </form>\n                <FileModal\n\n                    modal={modal}\n                    setModal={setModal}\n                    uploadFile={uploadFile}\n                />\n                <ProgressBar\n                    uploadState={uploadState}\n                    percentUploaded={percentUploaded}\n\n                />\n            </div>\n        </React.Fragment>\n    )\n}\n\nexport default MessageForm\n","import React from 'react'\nimport { Header, Icon, Input } from 'semantic-ui-react'\nimport './MessageHeader.scss'\n\nconst MessagesHeader = ({ channelName, numUniqueUsers, handleSearchTerm, searchLoading, isPrivateChannel, isChannelStarred, handleStar }) => {\n\n\n\n\n\n    return (\n        <React.Fragment>\n            <div className=\"messageHeader\">\n                {/* channel title */}\n                <Header fluid=\"true\" as=\"h2\" floated=\"left\" className=\"messageHeader__heading\">\n                    <span className=\"messageHeader__Name\" >\n                        {channelName}\n                        {!isPrivateChannel && (\n\n                            <Icon\n                                style={{ paddingLeft: '1.5rem' }}\n                                onClick={handleStar}\n                                name={isChannelStarred ? \"star\" : \"star outline\"}\n                                color={isChannelStarred ? \"yellow\" : \"black\"}\n                            />)}\n                    </span>\n                    <Header.Subheader style={{ paddingTop: '.7rem' }}>\n                        {numUniqueUsers}\n                    </Header.Subheader>\n                </Header>\n                {/* channel search Input */}\n                <Header className=\"messageHeader__search\">\n                    <Input\n                        loading={searchLoading}\n                        onChange={(event) => handleSearchTerm(event)}\n                        size=\"mini\"\n                        name=\"searchTerm\"\n                        placeholder=\"Search Messages\"\n                    >\n                        <input style={{ borderRadius: '100px', background: ' rgba(232, 250, 250, 0.733)' }} />\n                    </Input>\n                </Header>\n            </div>\n        </React.Fragment>\n    )\n}\n\nexport default MessagesHeader\n","import React from 'react'\nimport moment from 'moment'\nimport { Image } from 'semantic-ui-react'\nimport './MessageChat.scss'\n\nconst MessageChat = ({ user, message }) => {\n\n    const isOwnMessage = (message, user) => {\n        return message.user.id === user.uid ? 'messageChatMe' : 'messageChatOther';\n\n    }\n\n    const timeFromNow = (time) => moment(time).fromNow();\n\n    const isImage = (message) => {\n        return message.hasOwnProperty('image') && !message.hasOwnProperty('content');\n    }\n\n    return (\n\n        <React.Fragment>\n            <div className={isOwnMessage(message, user)} >\n\n                <div className=\"messageDetails\">\n                    <div className=\"messageDetails--name\" >~ {message.user.name}</div>\n                    <div className='area'>\n                        {isImage(message) ? <Image src={message.image} className=\"image\" /> :\n                            <span className=\"messageDetails--content\" >{message.content}</span>\n                        }\n                        <div className=\"messageDetails--time\">{timeFromNow(message.timestamp)}</div>\n                    </div>\n\n                </div>\n                <div className=\"avatar\"><Image avatar src={message.user.avatar} style={{ height: '3.5rem', width: '3.5rem' }} /></div>\n            </div>\n        </React.Fragment >\n    )\n}\n\nexport default MessageChat\n","import React from 'react'\nimport { Loader, Dimmer } from 'semantic-ui-react';\nconst Spinner = () => {\n    return (\n        <Dimmer active>\n            <Loader size=\"huge\" content={'prepering chat...'} />\n        </Dimmer>\n    )\n}\n\nexport default Spinner\n","import React from 'react'\n\nconst Typing = () => (\n    <div className=\"typing\">\n        <div className=\"typing__dot\"></div>\n        <div className=\"typing__dot\"></div>\n        <div className=\"typing__dot\"></div>\n\n    </div>\n)\n\nexport default Typing\n","import React, { useEffect, useState } from 'react'\n\nimport firebase from '../../firebase'\n\nimport Typing from './Typing'\n\nconst DisplayTypingUsers = ({ currChannel, currUser }) => {\n    const [typingUsers, setTypingUsers] = useState([])\n    const [listeners, setListeners] = useState([])\n    const [typingRef] = useState(firebase.database().ref('typing'))\n\n    useEffect(() => {\n        if (currChannel) {\n            addUserTypingListener(currChannel.id)\n        }\n\n        return () => removeListeners(listeners);\n\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [currChannel])\n\n\n    const removeListeners = (listeners) => {\n        listeners.forEach(listener => {\n            listener.ref.child(listener.id).off(listener.event);\n        });\n        setTypingUsers([]);\n    }\n    const addToListeners = (id, ref, event) => {\n        const index = listeners.findIndex(listener => {\n            return listener.id === id && listener.ref === ref && listener.event === event;\n        })\n\n        if (index === -1) {\n            const newListener = { id, ref, event }\n            setListeners([...listeners, newListener])\n        }\n    }\n\n\n    const addUserTypingListener = (channelId) => {\n        if (currChannel && channelId !== null) {\n            let tempTypingUsers = [];\n            typingRef\n                .child(channelId).on('child_added', snap => {\n                    if (snap.key !== currUser.uid) {\n                        tempTypingUsers = tempTypingUsers.concat({\n                            id: snap.key,\n                            name: snap.val()\n                        })\n                        setTypingUsers([...tempTypingUsers]);\n                    }\n                })\n            addToListeners(channelId, typingRef, 'child_added');\n            typingRef\n                .child(channelId).on('child_removed', snap => {\n                    const index = tempTypingUsers.findIndex(user => user.id === snap.key);\n                    if (index !== -1) {\n                        tempTypingUsers = tempTypingUsers.filter(user => user.id !== snap.key);\n                        setTypingUsers([...tempTypingUsers])\n                    }\n\n                })\n            addToListeners(channelId, typingRef, 'child_removed');\n        }\n    }\n    return (\n        typingUsers.length > 0 && typingUsers.map(user => (\n            <div style={{ display: 'flex', alignItems: 'center', marginBottom: '0.2em' }} key={user.id}>\n                <span className=\"user__typing\">{user.name}  typing</span>\n                <Typing />\n            </div>\n        ))\n    )\n}\n\nexport default DisplayTypingUsers\n","import React from 'react'\n\nconst InitialMessage = () => {\n    return (\n        <div className=\"initialmessages\">\n            fsdfasfs\n        </div>\n    )\n}\n\nexport default InitialMessage\n","import React, { useState, useEffect, useRef } from 'react'\nimport { Comment } from 'semantic-ui-react'\n\nimport { useDispatch } from 'react-redux'\nimport { setUserPosts } from '../../../action'\n\nimport firebase from '../../../firebase'\n\nimport MessageForm from '../messageForm/MessageForm'\nimport MessagesHeader from '../messageHeader/MessagesHeader'\nimport MessageChat from '../messageChat/MessageChat'\n\nimport Spinner from '../../spinner/Spinner'\nimport DisplayTypingUsers from '../DisplayTypingUsers'\nimport './Message.scss'\nimport InitialMessage from '../InitialMessage/InitialMessage'\n\nconst Message = (props) => {\n    const { currChannel, currUser, isPrivateChannel } = props;\n    const dispatch = useDispatch();\n    const messageEnd = useRef()\n    const [numUniqueUsers, setNumUniqueUsers] = useState(\"\")\n    const [messageRef] = useState(firebase.database().ref('messages'))\n    const [privateMessageRef] = useState(firebase.database().ref('privateMessages'))\n    const [userRef] = useState(firebase.database().ref('users'))\n    const [messages, setMessages] = useState([])\n    const [messageLoading, setMessageLoading] = useState(true)\n    const [searchTearm, setSearchTearm] = useState(\"\")\n    const [searchResult, setSearchResult] = useState([])\n    const [searchLoading, setSearchLoading] = useState(false)\n    const [isChannelStarred, setIsChannelStarred] = useState(false)\n    const [connectRef] = useState(firebase.database().ref('.info/connected'))\n    const [listeners, setListeners] = useState([])\n    useEffect(() => {\n        if (currUser && currChannel) {\n            removeListeners(listeners);\n            messageListener(currChannel.id);\n            addUserStarsListener(currChannel.id, currUser.uid)\n        }\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [currUser, currChannel, listeners])\n\n    useEffect(() => {\n        messageEnd.current.scrollIntoView({ behavior: 'smooth', block: 'start' });\n\n    }, [messages])\n\n\n\n\n\n    useEffect(() => {\n        return () => {\n            removeListeners(listeners)\n            connectRef.off();\n        }\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [])\n\n    const removeListeners = (listeners) => {\n        listeners.forEach(listener => {\n            listener.ref.child(listener.id).off(listener.event);\n        });\n\n    }\n    const addToListeners = (id, ref, event) => {\n        const index = listeners.findIndex(listener => {\n            return listener.id === id && listener.ref === ref && listener.event === event;\n        })\n\n        if (index === -1) {\n            const newListener = { id, ref, event }\n            setListeners([...listeners, newListener])\n        }\n    }\n\n\n\n    const addUserStarsListener = (channelId, userId) => {\n        userRef\n            .child(userId)\n            .child('starred')\n            .once('value')\n            .then(data => {\n                if (data.val() !== null) {\n                    const channelIds = Object.keys(data.val());\n                    const prevStarred = channelIds.includes(channelId);\n                    setIsChannelStarred(prevStarred)\n                }\n            })\n    }\n\n    const messageListener = (id) => {\n        let loadedMessages = [];\n        const ref = getMessageRef()\n        ref.child(id).on('child_added', snap => {\n            loadedMessages.push(snap.val());\n            setMessages([...loadedMessages])\n            setMessageLoading(false)\n            countUniqueUsers(loadedMessages);\n            countUserPosts(loadedMessages);\n        })\n        addToListeners(id, ref, 'child_added');\n\n    }\n\n    const handleStar = () => {\n        const updatedChannelStarred = !isChannelStarred;\n        setIsChannelStarred(updatedChannelStarred);\n\n        if (updatedChannelStarred) {\n            userRef\n                .child(`${currUser.uid}/starred`)\n                .update({\n                    [currChannel.id]: {\n                        name: currChannel.name,\n                        details: currChannel.details,\n                        createdBy: {\n                            name: currChannel.createdBy.name,\n                            avatar: currChannel.createdBy.avatar\n\n                        }\n                    }\n                })\n        } else {\n            userRef\n                .child(`${currUser.uid}/starred`)\n                .child(currChannel.id)\n                .remove(err => {\n                    if (err !== null) {\n                        console.log(err);\n                    }\n                })\n        }\n\n\n\n    }\n\n\n    const getMessageRef = () => {\n        return isPrivateChannel ? privateMessageRef : messageRef\n    }\n\n\n    const countUniqueUsers = (messages) => {\n        const uniqueUsers = messages.reduce((acc, message) => {\n            if (!acc.includes(message.user.name)) {\n                acc.push(message.user.name)\n            }\n            return acc;\n        }, []);\n        const plural = uniqueUsers.length > 1 || uniqueUsers.length === 0;\n        setNumUniqueUsers(`${uniqueUsers.length} user${plural ? \"s\" : \"\"}`)\n    }\n\n    const countUserPosts = (messages) => {\n        let userPosts = messages.reduce((acc, message) => {\n            if (message.user.name in acc) {\n                acc[message.user.name].count += 1;\n            }\n            else {\n                acc[message.user.name] = {\n                    avatar: message.user.avatar,\n                    count: 1\n                }\n            }\n            return acc;\n        }, {})\n        dispatch(setUserPosts(userPosts))\n    }\n\n\n\n\n    const handleSearchTerm = event => {\n        const search = event.target.value;\n        setSearchTearm(search)\n        setSearchLoading(true)\n\n        const channelMessage = [...messages];\n        const searchResult = channelMessage.reduce((acc, message) => {\n            if (\n                ((message.content && message.content.toLowerCase().includes(search.toLowerCase())) || ((message.user && message.user.name && message.user.name.toLowerCase().includes(search.toLowerCase()))))\n            ) {\n                acc.push(message)\n            }\n            return acc;\n        }, [])\n        setSearchResult(searchResult)\n        setTimeout(() => setSearchLoading(false), 700)\n    }\n\n\n\n\n    const displayMessage = (messages) => (\n        messages.length > 0 ? messages.map(message => (\n            <MessageChat\n                key={message.timestamp}\n                message={message}\n                user={currUser}\n            />\n        )) : <InitialMessage />\n\n    )\n\n    const displayChannelName = channel => {\n        return channel ? `${isPrivateChannel ? '@' : '#'}${channel.name}` : '';\n    }\n\n\n    return (\n        <React.Fragment>\n            <MessagesHeader\n                handleSearchTerm={handleSearchTerm}\n                channelName={displayChannelName(currChannel)}\n                numUniqueUsers={numUniqueUsers}\n                searchLoading={searchLoading}\n                isPrivateChannel={isPrivateChannel}\n                handleStar={handleStar}\n                isChannelStarred={isChannelStarred}\n                setIsChannelStarred={setIsChannelStarred}\n            />\n\n            <Comment.Group className=\"messages\" style={{ position: 'relative' }}>\n                {(messageLoading ? (\n                    <React.Fragment>\n                        <Spinner />\n                    </React.Fragment>\n\n                ) : null)}\n                {searchTearm ? displayMessage(searchResult) : displayMessage(messages)}\n                <DisplayTypingUsers\n                    currUser={currUser}\n                    currChannel={currChannel}\n                />\n                <div ref={messageEnd}></div>\n            </Comment.Group>\n\n            <MessageForm\n                isPrivateChannel={isPrivateChannel}\n                channel={currChannel}\n                user={currUser}\n                getMessageRef={getMessageRef}\n            />\n        </React.Fragment>\n    )\n}\n\nexport default Message\n","import React, { useState } from 'react'\nimport { Accordion, Header, Icon, Image, List, Segment } from 'semantic-ui-react'\n\nconst MetaPanel = ({ privateChannel, channel, userPosts }) => {\n    const [activeIndex, setActiveIndex] = useState(0)\n\n    const displayTopPosters = (userPosts) =>\n        Object.entries(userPosts)\n            .sort((a, b) => b[1].count - a[1].count)\n            .map(([key, val], i) => (\n                <List.Item key={i}>\n                    <Image avatar src={val.avatar} />\n                    <List.Content>\n                        <List.Header as=\"a\" >{key}</List.Header>\n                        <List.Description> {formateCount(val.count)}</List.Description>\n                    </List.Content>\n                </List.Item>\n            )\n            )\n            .slice(0, 5);\n\n    const formateCount = num => (num > 1 || num === 0) ? `${num} Posts` : `${num}post`;\n\n    if (privateChannel) return null;\n    return (\n        <React.Fragment>\n            <Segment loading={!channel} style={{ width: '30rem' }}>\n                <Header as=\"h3\" attached=\"top\">\n                    About :   #{channel && channel.name}\n                </Header>\n                <Accordion styled attached=\"true\">\n\n                    <Accordion.Title\n                        active={activeIndex === 0}\n                        index={0}\n                        onClick={(event, { index }) => { activeIndex === index ? setActiveIndex(-1) : setActiveIndex(index) }}\n                    >\n                        <Icon name=\"dropdown\" />\n                        <Icon name=\"info\" />\n                        Channel Details\n                    </Accordion.Title>\n                    <Accordion.Content\n                        active={activeIndex === 0}\n                    >\n                        {channel && channel.details}\n                    </Accordion.Content>\n\n                    <Accordion.Title\n                        active={activeIndex === 1}\n                        index={1}\n                        onClick={(event, { index }) => { activeIndex === index ? setActiveIndex(-1) : setActiveIndex(index) }}\n                    >\n                        <Icon name=\"dropdown\" />\n                        <Icon name=\"user circle\" />\n                        Top Posters\n                    </Accordion.Title>\n                    <Accordion.Content\n                        active={activeIndex === 1}\n                    >\n                        <List>\n                            {userPosts && displayTopPosters(userPosts)}\n                        </List>\n                    </Accordion.Content>\n\n                    <Accordion.Title\n                        active={activeIndex === 2}\n                        index={2}\n                        onClick={(event, { index }) => { activeIndex === index ? setActiveIndex(-1) : setActiveIndex(index) }}\n                    >\n                        <Icon name=\"dropdown\" />\n                        <Icon name=\"pencil alternate\" />\n                       Created BY\n                    </Accordion.Title>\n                    <Accordion.Content\n                        active={activeIndex === 2}\n                    >\n                        <Header as=\"h3\">\n                            <Image circular src={channel && channel.createdBy.avatar} />\n                            {channel && channel.createdBy.name}\n                        </Header>\n\n                    </Accordion.Content>\n\n                </Accordion>\n            </Segment>\n        </React.Fragment>\n    )\n}\n\nexport default MetaPanel\n","import React, { useEffect, useState } from 'react'\nimport { Icon, Menu, Popup } from 'semantic-ui-react';\nimport { useSelector } from 'react-redux'\nimport './App.scss'\nimport SidePanel from '../sidepanel/sidePanel/SidePanel';\nimport Message from '../message/message/Message';\nimport MetaPanel from '../metaPanel/MetaPanel';\nconst App = () => {\n  const [currUser, setCurrUser] = useState(\"\")\n  const [currChannel, setCurrChannel] = useState(\"\")\n  const [privateChannel, setPrivateChannel] = useState(\"\")\n  const [userPosts, setUserPosts] = useState(\"\")\n  const [primaryColor, setPrimaryColor] = useState(\"#2155bf\")\n  const [secondaryColor, setSecondaryColor] = useState(\"#e4e9f5\")\n  const [activeItem, setActiveItem] = useState('channel')\n  var colors = useSelector(state => state.colors);\n  var user = useSelector(state => state.user.currentUser);\n  var channel = useSelector(state => state.channel.currentChannel);\n  var isPrivateChannel = useSelector(state => state.channel.isPrivateChannel);\n  var currUserPosts = useSelector(state => state.channel.userPosts);\n  useEffect(() => {\n    setCurrUser(user)\n  }, [user])\n\n  useEffect(() => {\n    setCurrChannel(channel)\n  }, [channel])\n\n  useEffect(() => {\n    setPrivateChannel(isPrivateChannel)\n  }, [isPrivateChannel])\n\n  useEffect(() => {\n    setUserPosts(currUserPosts)\n  }, [currUserPosts])\n\n  useEffect(() => {\n    setPrimaryColor(colors.primaryColor)\n    setSecondaryColor(colors.secondaryColor)\n  }, [colors])\n\n  const handleItemClick = (e, { name }) => {\n    setActiveItem(name)\n  }\n\n\n\n  return (\n    <div className=\"app\">\n      <div className=\"app__container--outer\">\n        <div className=\"app__container--inner\" style={{ backgroundColor: primaryColor }}>\n          <div className=\"app__icons\">\n            <div className=\"app__icon--rocket\"> <Icon name=\"rocketchat\" /></div>\n            <div className=\"app__icons--group \">\n              <Menu secondary vertical className=\"menu\" style={{ width: '350%' }}>\n                <Menu.Item\n                  name=\"channel\"\n                  active={activeItem === 'channel'}\n                  onClick={handleItemClick}\n                  style={{ color: 'white' }}\n                  className=\"menu--item\"\n                >\n                  <div className={activeItem === \"channel\" ? `app__icon--small ` : \"app__icon--small\"}><Icon name=\"comments\" /></div>\n                </Menu.Item>\n                <Menu.Item\n                  name=\"directMessage\"\n                  active={activeItem === 'directMessage'}\n                  onClick={handleItemClick}\n                  className=\"menu--item\"\n                  style={{ color: 'white' }}\n                >\n                  <div className={activeItem === \"directMessage\" ? `app__icon--small ` : \"app__icon--small\"} ><Icon name=\"paper plane\" /></div>\n                </Menu.Item>\n                <Menu.Item\n                  name=\"starred\"\n                  active={activeItem === 'starred'}\n                  onClick={handleItemClick}\n                  className=\"menu--item\"\n                  style={{ color: 'white' }}\n                > <div className={activeItem === \"starred\" ? `app__icon--small ` : \"app__icon--small\"}><Icon name=\"star\" /></div>\n                </Menu.Item>\n                <Menu.Item\n                  name=\"color\"\n                  active={activeItem === 'color'}\n                  onClick={handleItemClick}\n                  className=\"menu--item\"\n                  style={{ color: 'white' }}\n                > <div className={activeItem === \"starred\" ? `app__icon--small ` : \"app__icon--small\"}>\n                    <Icon name=\"paint brush\" />\n                  </div>\n                </Menu.Item>\n              </Menu>\n            </div>\n          </div>\n          <div className=\"app__chat\" style={{ backgroundColor: secondaryColor }}>\n            <div className=\"app__sidePanel\">\n              <SidePanel\n                currUser={currUser}\n                currChannel={currChannel}\n                primaryColor={primaryColor && primaryColor}\n                activeItem={activeItem}\n              />\n            </div>\n            <div className=\"app__messageArea\">\n              <Message\n                currChannel={currChannel}\n                currUser={currUser}\n                isPrivateChannel={privateChannel}\n              />\n            </div>\n            <div className=\"app__details\">\n              {!privateChannel && <Popup\n                position='bottom right'\n                on='click'\n                pinned\n                trigger={<Icon name=\"info circle\" className=\"info__icon\" />}\n                content={\n                  <MetaPanel\n                    channel={currChannel}\n                    privateChannel={privateChannel}\n                    userPosts={userPosts}\n                  />}\n              >\n              </Popup>\n              }\n            </div>\n          </div>\n\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default App\n\n","export default __webpack_public_path__ + \"static/media/livechat.94e6f7f0.gif\";","import React, { useState } from 'react'\nimport { Form, Message } from 'semantic-ui-react'\nimport './LoginForm.scss'\nimport { Link } from 'react-router-dom';\nimport firebase from '../../../../firebase';\n\n\n\nconst LoginForm = () => {\n\n    const [errors, seterrors] = useState(\"\")\n    const [email, setEmail] = useState(\"\");\n    const [password, setPassword] = useState(\"\");\n    const [loading, setLoading] = useState(false);\n\n\n\n\n    const formSubmit = (event) => {\n        event.preventDefault();\n        if (email && password) {\n            setLoading(true);\n            firebase\n                .auth()\n                .signInWithEmailAndPassword(email, password)\n                .then(() => {\n                    setLoading(false);\n                    seterrors(\"\")\n                })\n                .catch((err) => {\n                    console.log(err);\n                    seterrors(err.message)\n                    setLoading(false);\n                })\n        }\n        else {\n            seterrors(\"Fill  the data\")\n        }\n    }\n\n\n\n    return (\n        <div className=\"loginForm\">\n            {\n                errors ? <Message error style={{ width: '40rem', height: '5rem' }} ><h2>Error:{errors}</h2></Message> : \"\"\n\n            }\n            <Form onSubmit={formSubmit}>\n                <Form.Input\n                    fluid\n                    name=\"email\"\n                    icon=\"mail\"\n                    iconPosition=\"left\"\n                    label=\"Email\"\n                    type=\"Email\"\n                    onChange={(event) => setEmail(event.target.value)} value={email}\n                    className={errors.toLowerCase().includes('email') ? 'error loginForm__input' : 'loginForm__input'}\n                />\n                <Form.Input\n                    fluid\n                    name=\"password\"\n                    icon=\"lock\"\n                    iconPosition=\"left\"\n                    label=\"Password\"\n                    type=\"password\"\n                    onChange={(event) => setPassword(event.target.value)} value={password}\n                    className={errors.toLowerCase().includes('password') ? 'error loginForm__input' : 'loginForm__input'}\n                />\n                <button disabled={loading} className={loading ? 'loading loginForm__button' : \" loginForm__button\"} type='submit'>Login </button>\n            </Form>\n            <div className=\"loginForm__link\">Don't Have An Account?<Link to=\"/register\" >  Register</Link></div>\n\n        </div>\n    )\n}\n\nexport default LoginForm\n","import React from 'react'\n\n\nimport sideGif from '../../../img/livechat.gif'\nimport './Login.scss'\nimport LoginForm from './loginForm/LoginForm'\n\n\nconst Login = () => {\n    return (\n        <div className=\"loginContainer\">\n            <div className=\"login\">\n                <div className=\"login__signin\">\n                    <h2 className=\"login__signin--heading\">Welcome Back</h2>\n                    <div className=\"login__signin--form\"><LoginForm /></div>\n                </div>\n\n                <img src={sideGif} alt=\"rocket\" className=\"login__image\" />\n            </div>\n        </div>\n    )\n}\n\nexport default Login\n","export default __webpack_public_path__ + \"static/media/rocket.0177b593.jpg\";","import React, { useState } from 'react'\nimport { Form, Icon, Message } from 'semantic-ui-react'\nimport { Link } from 'react-router-dom';\nimport firebase from '../../../../firebase';\nimport md5 from 'md5';\nimport './RegisterForm.scss'\nconst RegisterForm = () => {\n\n    const [errors, seterrors] = useState(\"\")\n    const [username, setUsername] = useState(\"\");\n    const [email, setEmail] = useState(\"\");\n    const [password, setPassword] = useState(\"\");\n    const [confirmPassword, setConfirmPassword] = useState(\"\");\n    const [loading, setLoading] = useState(false);\n    const [usersRef] = useState(firebase.database().ref('users'));\n\n\n\n\n    const isFormValid = () => {\n        if (!username || !email || !password || !confirmPassword) {\n            seterrors(\"Fill all the fields\");\n            return false;\n        }\n        else if (password.length < 6 || confirmPassword.length < 6) {\n            if (password !== confirmPassword) {\n                seterrors(\"Password dont match\")\n                return false;\n            }\n            else {\n                seterrors(\"Password atleast have 6 character\")\n                return false;\n            }\n        }\n        else {\n            return true;\n        }\n    }\n\n\n    const formSubmit = (event) => {\n        event.preventDefault();\n        if (isFormValid()) {\n            setLoading(true)\n            firebase\n                .auth()\n                .createUserWithEmailAndPassword(email, password)\n                .then(createdUser => {\n                    seterrors(\"\");\n                    createdUser.user.updateProfile({\n                        displayName: username,\n                        photoURL: `http://gravatar.com/avatar/${md5(createdUser.user.email)}?d=identicon`\n                    })\n                        .then(() => {\n                            usersRef.child(createdUser.user.uid).set({\n                                name: createdUser.user.displayName,\n                                avatar: createdUser.user.photoURL\n                            });\n                            setLoading(false);\n                        })\n                        .catch((err) => {\n                            console.log(err);\n                            setLoading(false);\n                            seterrors(err.message);\n                        })\n                })\n                .catch(err => {\n                    seterrors(err.message);\n                    setLoading(false);\n                });\n        }\n    }\n\n\n    return (\n        <div className=\"registerform\">\n            {\n                errors ? <Message error className=\"registerform__error\" ><h2>Error  :  {errors}</h2></Message> : \"\"\n\n            }\n\n            <h4 className=\"registerform__heading\">Sign Up </h4>\n            <Form onSubmit={formSubmit}>\n                <Form.Group >\n                    <Form.Input\n                        fluid\n                        id='form-subcomponent-shorthand-input-first-name'\n                        label='Username'\n                        className=\"registerform__input1\"\n                        icon=\"user\"\n                        iconPosition=\"left\"\n                        type=\"text\"\n                        onChange={(event) => setUsername(event.target.value)}\n                        value={username}\n                    />\n                    <Form.Input\n                        fluid\n                        id='form-subcomponent-shorthand-input-last-name'\n                        label='Email'\n                        icon=\"mail\"\n                        iconPosition=\"left\"\n                        type=\"email\"\n                        onChange={(event) => setEmail(event.target.value)}\n                        value={email}\n\n                        className={errors.toLowerCase().includes('email') ? 'error  registerform__input1' : ' registerform__input1'}\n                    />\n                </Form.Group>\n                <Form.Input\n                    fluid\n                    name=\"username\"\n                    icon=\"lock\"\n                    iconPosition=\"left\"\n                    label=\"Password\"\n                    type=\"password\"\n                    onChange={(event) => setPassword(event.target.value)}\n                    value={password}\n                    className={errors.toLowerCase().includes('password') ? 'error registerform__input2' : ' registerform__input2'}\n                />\n                <Form.Input\n                    fluid\n                    name=\"username\"\n                    icon=\"repeat\"\n                    iconPosition=\"left\"\n                    label=\"Confirm Password\"\n                    type=\"password\"\n                    onChange={(event) => setConfirmPassword(event.target.value)}\n                    value={confirmPassword}\n                    className={errors.toLowerCase().includes('password dont match') ? 'error registerform__input2' : 'registerform__input2'}\n                />\n                <Form.Checkbox required label='I agree to the Terms and Conditions' />\n                <button type='submit' disabled={loading} className={loading ? 'loading registerform__button' : \"registerform__button\"} ><Icon name=\"arrow right\" /> </button>\n            </Form>\n            <div className=\"registerform__link\">Already a user?<Link to=\"/login\">  Login</Link></div>\n\n        </div>\n    )\n}\n\nexport default RegisterForm\n","import React from 'react'\n\nimport './Register.scss'\nimport sideImage from '../../../img/rocket.jpg'\nimport RegisterForm from './registerForm/RegisterForm'\n\nconst Register = () => {\n    return (\n        <div className=\"container\">\n            <div className=\"register\">\n                <div className=\"register__signup\">\n                    <div className=\"register__signup--form\"><RegisterForm /></div>\n                </div>\n\n                <img src={sideImage} alt=\"rocket\" className=\"register__image\" />\n            </div>\n        </div>\n    )\n}\n\nexport default Register\n","import * as actionTypes from '../action/types';\nimport { combineReducers } from 'redux'\nconst initialUserState = {\n    currentUser: null,\n    isLoading: true\n};\n\nconst initialChannelState = {\n    currentChannel: null,\n    isPrivateChannel: false,\n    userPosts: null\n};\n\nconst initialColors = {\n    primaryColor: '#2155bf',\n    secondaryColor: '#e4e9f5'\n};\n\n\n\nconst user_reducer = (state = initialUserState, action) => {\n    switch (action.type) {\n        case actionTypes.SET_USER:\n            return {\n                currentUser: action.payload.currentUser,\n                isLoading: false\n            };\n        case actionTypes.CLEAR_USER:\n            return {\n                ...state,\n                isLoading: false\n            };\n        default:\n            return state;\n    }\n}\n\nconst channel_reducer = (state = initialChannelState, action) => {\n    switch (action.type) {\n        case actionTypes.SET_CURRENT_CHANNEL:\n            return {\n                ...state,\n                currentChannel: action.payload.currentChannel\n            };\n        case actionTypes.SET_PRIVATE_CHANNEL:\n            return {\n                ...state,\n                isPrivateChannel: action.payload.isPrivateChannel\n            }\n        case actionTypes.SET_USER_POSTS:\n            return {\n                ...state,\n                userPosts: action.payload.userPosts\n            }\n        default:\n            return state;\n    }\n}\n\nconst colors_reducer = (state = initialColors, action) => {\n    switch (action.type) {\n        case actionTypes.SET_COLORS:\n            return {\n                primaryColor: action.payload.primaryColor,\n                secondaryColor: action.payload.secondaryColor\n\n            };\n        default:\n            return state;\n    }\n}\n\n\n\n\nconst rootReducer = combineReducers({\n    user: user_reducer,\n    channel: channel_reducer,\n    colors: colors_reducer\n});\n\nexport default rootReducer;","import React, { useEffect } from 'react';\nimport { useHistory, HashRouter as Router, Switch, Route } from \"react-router-dom\";\nimport ReactDOM from 'react-dom';\n\n\nimport { createStore } from 'redux'\nimport { Provider } from 'react-redux'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { setUser, clearUser } from './action'\n\nimport firebase from 'firebase/app';\nimport 'semantic-ui-css/semantic.min.css';\n\nimport App from './component/app/App';\nimport Login from \"./component/Auth/login/Login\";\nimport Register from \"./component/Auth/register/Register\";\nimport rootReducer from './reducers';\nimport Spinner from '../src/component/spinner/Spinner'\nimport './index.scss'\n\nconst store = createStore(rootReducer);\nconst Root = () => {\n    let history = useHistory()\n    const dispatch = useDispatch();\n    var isLoading = useSelector(state => state.user.isLoading)\n    useEffect(() => {\n        firebase.auth().onAuthStateChanged(user => {\n            if (user) {\n                dispatch(setUser(user));\n                history.push('/');\n            }\n            else {\n                history.push('/login');\n                dispatch(clearUser());\n            }\n        })\n    }, [dispatch, history]);\n\n    return isLoading ? <Spinner /> : (\n\n        <Switch>\n            <Route exact path=\"/\" component={App} />\n            <Route path=\"/login\" component={Login} />\n            <Route path=\"/register\" component={Register} />\n        </Switch>\n\n    )\n}\n\nexport const RouterRoot = (props) => {\n    return (\n        <Provider store={store}>\n            <Router basename=\"/#/Fire-Chat\" >\n                {props.children}\n            </Router>\n        </Provider>\n    )\n}\n\n\n\nReactDOM.render(<RouterRoot><Root /></RouterRoot>, document.getElementById('root'));"],"sourceRoot":""}